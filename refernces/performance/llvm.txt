(array(int8, 1d, C),)//////////////; ModuleID = 'sum2d'
source_filename = "<string>"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

@.const.sum2d = internal constant [6 x i8] c"sum2d\00"
@".const.Fatal error: missing _dynfunc.Closure" = internal constant [38 x i8] c"Fatal error: missing _dynfunc.Closure\00"
@PyExc_RuntimeError = external global i8
@".const.missing Environment" = internal constant [20 x i8] c"missing Environment\00"

; Function Attrs: norecurse nounwind
define i32 @"_ZN8__main__9sum2d$241E5ArrayIaLi1E1C7mutable7alignedE"(i64* noalias nocapture %retptr, { i8*, i32 }** noalias nocapture readnone %excinfo, i8* noalias nocapture readnone %env, i8* nocapture readnone %arg.arr.0, i8* nocapture readnone %arg.arr.1, i64 %arg.arr.2, i64 %arg.arr.3, i8* nocapture readonly %arg.arr.4, i64 %arg.arr.5.0, i64 %arg.arr.6.0) local_unnamed_addr #0 {
entry:
  %.105 = icmp sgt i64 %arg.arr.2, 0
  br i1 %.105, label %B28.preheader, label %B131

B28.preheader:                                    ; preds = %entry
  %0 = add i64 %arg.arr.2, 1
  br label %B28

B28:                                              ; preds = %B28.preheader, %B28
  %lsr.iv10 = phi i8* [ %arg.arr.4, %B28.preheader ], [ %scevgep, %B28 ]
  %lsr.iv = phi i64 [ %0, %B28.preheader ], [ %lsr.iv.next, %B28 ]
  %aa.08 = phi i64 [ %aa.1, %B28 ], [ 0, %B28.preheader ]
  %cc.07 = phi i64 [ %cc.1, %B28 ], [ 0, %B28.preheader ]
  %.219 = load i8, i8* %lsr.iv10, align 1
  %.229 = icmp eq i8 %.219, 0
  %.248 = add nsw i64 %aa.08, 8
  %.483 = add nsw i64 %cc.07, 332
  %cc.1 = select i1 %.229, i64 %cc.07, i64 %.483
  %aa.1 = select i1 %.229, i64 %.248, i64 %aa.08
  %lsr.iv.next = add i64 %lsr.iv, -1
  %scevgep = getelementptr i8, i8* %lsr.iv10, i64 1
  %.144 = icmp sgt i64 %lsr.iv.next, 1
  br i1 %.144, label %B28, label %B131

B131:                                             ; preds = %B28, %entry
  %cc.0.lcssa = phi i64 [ 0, %entry ], [ %cc.1, %B28 ]
  %aa.0.lcssa = phi i64 [ 0, %entry ], [ %aa.1, %B28 ]
  %.517 = add nsw i64 %aa.0.lcssa, %cc.0.lcssa
  store i64 %.517, i64* %retptr, align 8
  ret i32 0
}

define i8* @"_ZN7cpython8__main__9sum2d$241E5ArrayIaLi1E1C7mutable7alignedE"(i8* %py_closure, i8* %py_args, i8* nocapture readnone %py_kws) local_unnamed_addr {
entry:
  %.5 = alloca i8*, align 8
  %.6 = call i32 (i8*, i8*, i64, i64, ...) @PyArg_UnpackTuple(i8* %py_args, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.const.sum2d, i64 0, i64 0), i64 1, i64 1, i8** nonnull %.5)
  %.7 = icmp eq i32 %.6, 0
  %.30 = alloca { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }, align 8
  %0 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull %0, i8 0, i64 56, i32 8, i1 false)
  br i1 %.7, label %entry.if, label %entry.endif, !prof !0

entry.if:                                         ; preds = %entry.endif.endif.endif, %entry
  ret i8* null

entry.endif:                                      ; preds = %entry
  %.11 = icmp eq i8* %py_closure, null
  br i1 %.11, label %entry.endif.if, label %entry.endif.endif, !prof !0

entry.endif.if:                                   ; preds = %entry.endif
  %.13 = call i32 @puts(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @".const.Fatal error: missing _dynfunc.Closure", i64 0, i64 0))
  unreachable

entry.endif.endif:                                ; preds = %entry.endif
  %.15 = ptrtoint i8* %py_closure to i64
  %.16 = add i64 %.15, 24
  %.18 = inttoptr i64 %.16 to { i8* }*
  %.193 = bitcast { i8* }* %.18 to i8**
  %.20 = load i8*, i8** %.193, align 8
  %.25 = icmp eq i8* %.20, null
  br i1 %.25, label %entry.endif.endif.if, label %entry.endif.endif.endif, !prof !0

entry.endif.endif.if:                             ; preds = %entry.endif.endif
  call void @PyErr_SetString(i8* nonnull @PyExc_RuntimeError, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @".const.missing Environment", i64 0, i64 0))
  ret i8* null

entry.endif.endif.endif:                          ; preds = %entry.endif.endif
  %1 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.30 to i8**
  %.29 = load i8*, i8** %.5, align 8
  %.32 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.30 to i8*
  %.33 = call i32 @NRT_adapt_ndarray_from_python(i8* %.29, i8* nonnull %.32)
  %.34 = icmp eq i32 %.33, 0
  %.35.fca.0.load = load i8*, i8** %1, align 8
  br i1 %.34, label %entry.endif.endif.endif.endif, label %entry.if, !prof !1

entry.endif.endif.endif.endif:                    ; preds = %entry.endif.endif.endif
  %2 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.30 to i8*
  %sunkaddr = getelementptr i8, i8* %2, i64 16
  %3 = bitcast i8* %sunkaddr to i64*
  %.35.fca.2.load = load i64, i64* %3, align 8
  %4 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.30 to i8*
  %sunkaddr4 = getelementptr i8, i8* %4, i64 32
  %5 = bitcast i8* %sunkaddr4 to i8**
  %.35.fca.4.load = load i8*, i8** %5, align 8
  %.105.i = icmp sgt i64 %.35.fca.2.load, 0
  br i1 %.105.i, label %B28.i.preheader, label %"_ZN8__main__9sum2d$241E5ArrayIaLi1E1C7mutable7alignedE.exit"

B28.i.preheader:                                  ; preds = %entry.endif.endif.endif.endif
  %6 = add i64 %.35.fca.2.load, 1
  br label %B28.i

B28.i:                                            ; preds = %B28.i.preheader, %B28.i
  %lsr.iv1 = phi i8* [ %.35.fca.4.load, %B28.i.preheader ], [ %scevgep, %B28.i ]
  %lsr.iv = phi i64 [ %6, %B28.i.preheader ], [ %lsr.iv.next, %B28.i ]
  %aa.08.i = phi i64 [ %aa.1.i, %B28.i ], [ 0, %B28.i.preheader ]
  %cc.07.i = phi i64 [ %cc.1.i, %B28.i ], [ 0, %B28.i.preheader ]
  %.219.i = load i8, i8* %lsr.iv1, align 1, !noalias !2
  %.229.i = icmp eq i8 %.219.i, 0
  %.248.i = add nsw i64 %aa.08.i, 8
  %.483.i = add nsw i64 %cc.07.i, 332
  %cc.1.i = select i1 %.229.i, i64 %cc.07.i, i64 %.483.i
  %aa.1.i = select i1 %.229.i, i64 %.248.i, i64 %aa.08.i
  %lsr.iv.next = add i64 %lsr.iv, -1
  %scevgep = getelementptr i8, i8* %lsr.iv1, i64 1
  %.144.i = icmp sgt i64 %lsr.iv.next, 1
  br i1 %.144.i, label %B28.i, label %"_ZN8__main__9sum2d$241E5ArrayIaLi1E1C7mutable7alignedE.exit"

"_ZN8__main__9sum2d$241E5ArrayIaLi1E1C7mutable7alignedE.exit": ; preds = %B28.i, %entry.endif.endif.endif.endif
  %cc.0.lcssa.i = phi i64 [ 0, %entry.endif.endif.endif.endif ], [ %cc.1.i, %B28.i ]
  %aa.0.lcssa.i = phi i64 [ 0, %entry.endif.endif.endif.endif ], [ %aa.1.i, %B28.i ]
  %.517.i = add nsw i64 %aa.0.lcssa.i, %cc.0.lcssa.i
  call void @NRT_decref(i8* %.35.fca.0.load)
  %.61 = call i8* @PyLong_FromLongLong(i64 %.517.i)
  ret i8* %.61
}

declare i32 @PyArg_UnpackTuple(i8*, i8*, i64, i64, ...) local_unnamed_addr

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #1

declare void @PyErr_SetString(i8*, i8*) local_unnamed_addr

declare i32 @NRT_adapt_ndarray_from_python(i8* nocapture, i8* nocapture) local_unnamed_addr

declare i8* @PyLong_FromLongLong(i64) local_unnamed_addr

; Function Attrs: noinline
define linkonce_odr void @NRT_decref(i8* %.1) local_unnamed_addr #2 {
.3:
  %.4 = icmp eq i8* %.1, null
  br i1 %.4, label %.3.if, label %.3.endif, !prof !0

.3.if:                                            ; preds = %.3.endif, %.3
  ret void

.3.endif:                                         ; preds = %.3
  %.7 = bitcast i8* %.1 to i64*
  %.4.i = atomicrmw sub i64* %.7, i64 1 monotonic
  %.9 = icmp eq i64 %.4.i, 1
  br i1 %.9, label %.3.endif.if, label %.3.if, !prof !0

.3.endif.if:                                      ; preds = %.3.endif
  tail call void @NRT_MemInfo_call_dtor(i8* nonnull %.1)
  ret void
}

declare void @NRT_MemInfo_call_dtor(i8*) local_unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

; Function Attrs: nounwind
declare void @llvm.stackprotector(i8*, i8**) #1

attributes #0 = { norecurse nounwind }
attributes #1 = { nounwind }
attributes #2 = { noinline }
attributes #3 = { argmemonly nounwind }

!0 = !{!"branch_weights", i32 1, i32 99}
!1 = !{!"branch_weights", i32 99, i32 1}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8__main__9sum2d$241E5ArrayIaLi1E1C7mutable7alignedE: %retptr"}
!4 = distinct !{!4, !"_ZN8__main__9sum2d$241E5ArrayIaLi1E1C7mutable7alignedE"}
