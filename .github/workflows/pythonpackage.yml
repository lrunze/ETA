# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and build
      run: |
         sudo apt-get update 
         sudo apt-get install -y llvm-8
         sudo apt-get install -y clang-8
         pip3 install virtualenv
         virtualenv venv
         source venv/bin/activate
         ls
         clang-8 etabackend/cpp/PARSE_TimeTagFileHeader.cpp -S -emit-llvm 
         clang-8 etabackend/cpp/PARSE_TimeTags.cpp  -S -emit-llvm 
         clang-8 etabackend/cpp/INFRA_vchn.cpp  -S -emit-llvm
         mv *.ll etabackend/ll/posix
         python3 setup.py bdist_wheel
         
    - name: Test with pytest
      run: |
        pip3 install tox --upgrade
        tox
        ls 

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
          name: wheels
          path: dist

  release:
    if: ${{ github.ref == 'master' }}
    # && github.event_name == 'release' && github.event.action == 'created'
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
         pip3 install twine
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
          name: wheels
    - name: Twine upload
      env:
          PYPI_PASSWORD: ${{secrets.PYPI_PASSWORD}}
          TWINE_PASSWORD: ${{secrets.PYPI_PASSWORD}}
          TWINE_USERNAME: ${{secrets.PYPI_USERNAME}}
          PYPI_USERNAME: ${{secrets.PYPI_USERNAME}}
      run: |
        twine upload dist/*.whl --skip-existing
