name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  build_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and build
      run: |
         python -m pip --version
         python -m pip install wheel --upgrade
         python setup.py bdist_wheel
         dir 
         move .\dist\*.whl .\gui\
         
    - name: Test with pytest
      run: |
        python -m pip install tox tox-gh-actions --upgrade
        tox
        dir 
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7,3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and build
      run: |
         sudo apt-get update 
         sudo apt-get install -y llvm-8
         sudo apt-get install -y clang-8
         pip3 install virtualenv
         virtualenv venv
         source venv/bin/activate
         ls
         clang-8 etabackend/cpp/PARSE_TimeTagFileHeader.cpp -S -emit-llvm 
         clang-8 etabackend/cpp/PARSE_TimeTags.cpp  -S -emit-llvm 
         clang-8 etabackend/cpp/INFRA_vchn.cpp  -S -emit-llvm
         mv *.ll etabackend/ll/posix
         python3 setup.py bdist_wheel
         
    - name: Test with pytest
      run: |
        pip3 install tox tox-gh-actions --upgrade
        tox
        ls 

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
          name: wheels-${{ matrix.python-version }}
          path: dist
  publish:
    needs: [build]
    if: ${{ github.ref == 'refs/heads/master' || (github.event_name == 'release' && github.event.action == 'published') }}
    runs-on: ubuntu-latest
    env:
        PYPI_PASSWORD: ${{secrets.PYPI_PASSWORD}}
        TWINE_PASSWORD: ${{secrets.PYPI_PASSWORD}}
        TWINE_USERNAME: ${{secrets.PYPI_USERNAME}}
        PYPI_USERNAME: ${{secrets.PYPI_USERNAME}}
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
         pip3 install twine
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
          name: wheels-3.7
    - name: Twine upload
      run: |
        ls
        twine upload wheels/*.whl --skip-existing
 