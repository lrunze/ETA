name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  wget_python_webinstall:
    runs-on: ubuntu-latest
    steps:
    - name: Download python-webinstall.exe
      uses: wei/wget@v1
      with:
        args: -O python-webinstall.exe https://www.python.org/ftp/python/3.7.3/python-3.7.3-amd64-webinstall.exe
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
          name: pywi
          path: python-webinstall.exe
  build_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and build
      run: |
         python -m pip --version
         python -m pip install wheel --upgrade
         python setup.py bdist_wheel
         dir 
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
          name: wheels-win-${{ matrix.python-version }}
          path: dist
    - name: Test with pytest
      run: |
        python -m pip install tox tox-gh-actions --upgrade
        tox
        dir
  build_windows_gui:
    needs: [build_windows,wget_python_webinstall]
    runs-on: windows-latest
    env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
          name: wheels-win-3.7
          path: gui
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
          name: pywi
          path: gui
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Build Electron app
      uses: samuelmeuli/action-electron-builder@v1
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          package_root: gui
    - name: build windows GUI
      run: |
        cd gui
        dir
        echo yarn
        echo yarn dist
        cd ..
        ls .\gui\dist\
        echo 7z a ETA_Install-win64.zip .\gui\dist\*.exe
        mkdir artifact
        move .\gui\dist\*.exe .\artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
          name: ETA_Install-win64
          path: artifact
   
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7,3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and build
      run: |
         sudo apt-get update 
         sudo apt-get install -y llvm-8
         sudo apt-get install -y clang-8
         pip3 install virtualenv
         virtualenv venv
         source venv/bin/activate
         ls
         clang-8 etabackend/cpp/PARSE_TimeTagFileHeader.cpp -S -emit-llvm 
         clang-8 etabackend/cpp/PARSE_TimeTags.cpp  -S -emit-llvm 
         clang-8 etabackend/cpp/INFRA_vchn.cpp  -S -emit-llvm
         mv *.ll etabackend/ll/posix
         python3 setup.py bdist_wheel
         
    - name: Test with pytest
      run: |
        pip3 install tox tox-gh-actions --upgrade
        tox
        ls 
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
          name: wheels-${{ matrix.python-version }}
          path: dist
  publish:
    needs: [build]
    if: ${{ github.ref == 'refs/heads/master' && (github.event_name == 'release' && github.event.action == 'published') }}
    runs-on: ubuntu-latest
    env:
        PYPI_PASSWORD: ${{secrets.PYPI_PASSWORD}}
        TWINE_PASSWORD: ${{secrets.PYPI_PASSWORD}}
        TWINE_USERNAME: ${{secrets.PYPI_USERNAME}}
        PYPI_USERNAME: ${{secrets.PYPI_USERNAME}}
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
         pip3 install twine
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
          name: wheels-3.7
          path: dist
    - name: Twine upload
      run: |
        ls
        twine upload dist/*.whl --skip-existing
 