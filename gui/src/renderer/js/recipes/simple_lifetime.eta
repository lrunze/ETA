{"vi_templatejevjreof":"{\"nodes\":[{\"x\":224,\"y\":115,\"fixed\":true,\"initial\":true,\"text\":\"state\",\"marked\":true}],\"edges\":[{\"source\":0,\"target\":0,\"text\":\"0\"}],\"usercode\":\"CLOCK(cXX)\\nHISTOGRAM(tXX,(`bins`,`binsize`))\\n\\nstate--0-->state:\\n    cXX.stop()\\n    cXX.find_start(SYNC)\\n    tXX.record(cXX)\"}","dpp_template_code":"#------IMPORTS-----\r\nimport numpy as np\r\nimport dash\r\nimport dash_core_components as dcc\r\nimport dash_html_components as html\r\nimport plotly.graph_objs as go\r\n\r\n#------ETA PROCESSING-----\r\ncutfile = eta.simple_cut(filename,4)\r\nresult = eta.run(cutfile, group='compile')\r\nh1=result[\"tXX\"]\r\nprint(np.max(h1))\r\n#h1=np.loadtxt(\"h1.tensor\")\r\n#np.savetxt(\"h1.tensor\",h1)\r\n\r\n\r\n#------PLOTTING-----\r\napp = dash.Dash()\r\napp.layout = html.Div(children=[\r\n    html.H1(children=expname),\r\n    dcc.Graph(\r\n        id='example-graph',\r\n        figure={\r\n            'data': [go.Heatmap(z=h1,\r\n            colorscale= [\r\n                [0, 'rgb(250, 250, 250)'],        #0\r\n                [1./10000, 'rgb(200, 200, 200)'], #10\r\n                [1./1000, 'rgb(150, 150, 150)'],  #100\r\n                [1./100, 'rgb(100, 100, 100)'],   #1000\r\n                [1./10, 'rgb(50, 50, 50)'],       #10000\r\n                [1., 'rgb(0, 0, 0)'],             #100000\r\n            ],\r\n            colorbar= {\r\n                'tick0': 0,\r\n                'tickmode': 'array',\r\n                'tickvals': [0, 1, 10, 80]\r\n            }) ],\r\n            'layout': {\r\n                'width':600,\r\n                'height':600,\r\n                'xaxis' : {'title' : 'Delay sync -> D1 (ps)'},\r\n                'yaxis' : {'title' : 'Delay sync -> D2 (ps)'}\r\n            }\r\n        }\r\n    )\r\n])\r\neta.display(app)","eta_index_table":"[{\"id\":\"var_templatejkim3bkj\",\"name\":\"filename\",\"group\":\"compile\",\"info\":\"\",\"config\":\"C:/timetags/example.ptu\"},{\"id\":\"var_templatejkim48wp\",\"name\":\"binsize\",\"group\":\"compile\",\"info\":\"\",\"config\":\"16\"},{\"id\":\"var_templatejkim2z6x\",\"name\":\"bins\",\"group\":\"compile\",\"info\":\"\",\"config\":\"780\"},{\"id\":\"var_templatejkim6uch\",\"name\":\"expname\",\"group\":\"compile\",\"info\":\"\",\"config\":\"simple lifetime\"},{\"id\":\"dpp_template_code\",\"name\":\"plotly\",\"group\":\"compile\",\"info\":\"\",\"config\":\"\"},{\"id\":\"dpp_templatejgmgxm2o\",\"name\":\"bokeh\",\"group\":\"compile\",\"info\":\"\",\"config\":\"\"},{\"id\":\"dpp_templatejhj7imob\",\"name\":\"txt+graph\",\"group\":\"compile\",\"info\":\"\",\"config\":\"\"},{\"id\":\"ri_templatejkim223k\",\"name\":\"Time Tagger\",\"group\":\"compile\",\"info\":\"ðŸ“¤ [0, 1]\",\"config\":\"[2,0]\"},{\"id\":\"vi_templatejevjreof\",\"name\":\"XX lifetime\",\"group\":\"compile\",\"info\":\"ðŸ“¥ [0], ðŸ“¤ [], ðŸ“Š ??? \",\"config\":\"\"},{\"id\":\"vi_templatejhrlp8yt\",\"name\":\"X lifetime\",\"group\":\"compile\",\"info\":\"ðŸ“¥ [3, 0], ðŸ“¤ [], ðŸ“Š ??? \",\"config\":\"\"},{\"id\":\"vi_templatejhrlupxy\",\"name\":\"delay1-3\",\"group\":\"compile\",\"info\":\"ðŸ“¥ [1], ðŸ“¤ [3], ðŸ“Š ??? \",\"config\":\"\"}]","dpp_templatejgmgxm2o":"#------IMPORTS-----\r\n\r\n#------ETA PROCESSING-----\r\ncutfile = eta.simple_cut(filename,4)\r\nh1 = eta.run(cutfile, group='compile')\r\n#h1=np.loadtxt(\"h1.tensor\")\r\n#np.savetxt(\"h1.tensor\",h1)\r\n\r\n\r\n\r\ndef app(doc):\r\n    global h1\r\n    from bokeh.layouts import column\r\n    from bokeh.models import  Slider\r\n    import bokeh.palettes\r\n    from bokeh.plotting import figure\r\n    import numpy as np\r\n    p1 = figure(x_range=(0, 10), y_range=(0, 10))\r\n    # must give a vector of image data for image parameter\r\n    p1.image(image=[h1], x=0, y=0, dw=10, dh=10,palette =bokeh.palettes.inferno(100))\r\n    def callback(attr, old, new):\r\n        print(\"callback called\")\r\n    slider = Slider(start=0, end=30, value=0, step=1, title=\"Smoothing by N Days\")\r\n    slider.on_change('value', callback)\r\n    doc.add_root(column(slider, p1))\r\n\r\n\r\n#------PLOTTING-----\r\n\r\neta.display(app)\r\n\r\n","dpp_templatejhj7imob":"#------IMPORTS-----\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom pylab import figure, cm\r\nfrom matplotlib.colors import LogNorm\r\nfrom os import path\r\n\r\nbinsize = int(binsize)\r\nbins = int(bins)\r\n#------ETA PROCESSING-----\r\ncutfile = eta.simple_cut(filename,4)\r\nresult = eta.run(cutfile, group='compile')\r\ntXX=result[\"tXX\"]\r\n\r\n\r\nroot, file = path.split(filename)\r\n\r\n#------PLOTTING-----\r\n\r\nxvalues = np.arange(0,bins*binsize,binsize)\r\nyvalues = tXX\r\n\r\nnp.savetxt(root+'\\\\'+ path.splitext(file)[0]+'_lifetime'+'.txt', np.transpose([xvalues,yvalues]))\r\n\r\np1 = plt.bar(xvalues, yvalues, width=binsize, color='#0088ff')\r\n\r\nplt.ylabel('events')\r\nplt.xlabel('time (ps)')\r\n#plt.show()\r\nplt.savefig(root+'\\\\'+ path.splitext(file)[0]+'_lifetime'+'.png', format = 'png')\r\nplt.savefig(root+'\\\\'+ path.splitext(file)[0]+'_lifetime'+'.eps', format = 'eps')\r\nplt.clf()","vi_templatejhrlp8yt":"{\"nodes\":[{\"x\":145,\"y\":157,\"fixed\":true,\"initial\":true,\"text\":\"stopped\",\"marked\":true},{\"x\":366,\"y\":174,\"fixed\":true,\"text\":\"started\",\"marked\":true}],\"edges\":[{\"source\":0,\"target\":1,\"text\":\"3\"},{\"source\":1,\"target\":0,\"text\":\"0\"},{\"source\":1,\"target\":1,\"text\":\"3\"}],\"usercode\":\"CLOCK(cX)\\nHISTOGRAM(tX,(`bins`,`binsize`))\\n\\nstarted:\\n    cX.start()\\nstopped:\\n    cX.stop()\\n    tX.record(cX)\"}","vi_templatejhrlupxy":"{\"nodes\":[{\"x\":141,\"y\":129,\"fixed\":true,\"initial\":true,\"text\":\"a\"}],\"edges\":[{\"source\":0,\"target\":0,\"text\":\"1\"}],\"usercode\":\"a:\\n    emit(3,100000)\"}","ri_templatejkim223k":null,"var_templatejkim2z6x":null,"var_templatejkim3bkj":null,"var_templatejkim48wp":null,"var_templatejkim6uch":null}