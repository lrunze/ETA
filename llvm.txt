(array(int8, 1d, C), array(int64, 1d, C), bytearray(uint8, 1d, C), int64, int64, int64, int64, int64, int64)//////////////; ModuleID = '<string>'
source_filename = "<string>"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%struct.circular_buf_t.4 = type { i64*, i64, i64, i64 }
%struct.TgHd.5 = type { [32 x i8], i32, i32, i64 }
%struct.__crt_locale_pointers.1.6 = type { %struct.__crt_locale_data.2.7*, %struct.__crt_multibyte_data.3.8* }
%struct.__crt_locale_data.2.7 = type opaque
%struct.__crt_multibyte_data.3.8 = type opaque

$printf = comdat any

$_vfprintf_l = comdat any

$__local_stdio_printf_options = comdat any

$"\01??_C@_0BB@NIGCBLED@?6TOTAL?5SLOTS?3?5?$CFd?$AA@" = comdat any

$"\01??_C@_0BG@NJEFHGP@?6Init?5ring?5buffer?5?$CFd?4?$AA@" = comdat any

$"\01??_C@_0CF@BDINJJIB@?6?5?$FLERROR?$FNMemalloc?5failed?0?5aborti@" = comdat any

$"\01?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA" = comdat any

$"\01??_C@_0CA@KHNGPAIJ@?6reading?5to?5?$CFlld?5?0?5?$FL?$CFlld?5?$CFlld?5?$FN?$AA@" = comdat any

$"\01??_C@_0BM@PJHDCAIH@?6?5?$FLERROR?$FNCorrupted?5slot?$CB?$CB?$CB?$CB?$AA@" = comdat any

$"\01??_C@_0CE@OPKBMAFE@?6POOL?5is?5empty?0?5read?5from?5file?50@" = comdat any

$"\01??_C@_0CM@LHOLBNIE@?6?6Thread?5assigned?5to?5file?5part?5?$FL@" = comdat any

$"\01??_C@_02JDPG@rb?$AA@" = comdat any

$"\01??_C@_0EP@PGBLNION@?6?5?$FLERROR?$FNReading?5buffer?5for?5Time@" = comdat any

$"\01??_C@_0DE@PLFGPKJO@?6?5?$FLERROR?$FNTime?9tag?5file?5cannot?5be@" = comdat any

@.const.mainloop = internal constant [9 x i8] c"mainloop\00"
@".const.Fatal error: missing _dynfunc.Closure" = internal constant [38 x i8] c"Fatal error: missing _dynfunc.Closure\00"
@PyExc_RuntimeError = external global i8
@".const.missing Environment" = internal constant [20 x i8] c"missing Environment\00"
@"\01?READER_fpin@@3PEAU_iobuf@@EA" = local_unnamed_addr global { i8* }* null, align 8
@order_gurantee2 = local_unnamed_addr global i64 0, align 8
@READER_batchend_pos_in_file = local_unnamed_addr global i64 0, align 8
@READER_batch_actualread_length = local_unnamed_addr global i64 0, align 8
@READER_buffer = local_unnamed_addr global i8* null, align 8
@READER_fseekpoint = local_unnamed_addr global i64 0, align 8
@READER_fendpoint = local_unnamed_addr global i64 0, align 8
@READER_next_RecID_relativeinbatch = local_unnamed_addr global i64 0, align 8
@READER_BytesofRecords = local_unnamed_addr global i32 0, align 4
@READER_TTRes_pspr = local_unnamed_addr global i64 0, align 8
@READER_SYNCRate_pspr = local_unnamed_addr global i64 0, align 8
@READER_DTRes_pspr = local_unnamed_addr global i64 0, align 8
@POOL_slot0_last_chns = local_unnamed_addr global i8 0, align 1
@POOL_real_slots = local_unnamed_addr global i8 0, align 1
@POOL_real_chns = local_unnamed_addr global i8 0, align 1
@POOL_total_slots = local_unnamed_addr global i8 0, align 1
@POOL_timetag = local_unnamed_addr global i64* null, align 8
@POOL_slot = local_unnamed_addr global i8* null, align 8
@VSLOT_timetag = local_unnamed_addr global %struct.circular_buf_t.4* null, align 8
@"\01??_C@_0BB@NIGCBLED@?6TOTAL?5SLOTS?3?5?$CFd?$AA@" = linkonce_odr unnamed_addr constant [17 x i8] c"\0ATOTAL SLOTS: %d\00", comdat, align 1
@"\01??_C@_0BG@NJEFHGP@?6Init?5ring?5buffer?5?$CFd?4?$AA@" = linkonce_odr unnamed_addr constant [22 x i8] c"\0AInit ring buffer %d.\00", comdat, align 1
@"\01??_C@_0CF@BDINJJIB@?6?5?$FLERROR?$FNMemalloc?5failed?0?5aborti@" = linkonce_odr unnamed_addr constant [37 x i8] c"\0A [ERROR]Memalloc failed, aborting.\0A\00", comdat, align 1
@"\01?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA" = linkonce_odr global i64 0, comdat, align 8
@"\01??_C@_0CA@KHNGPAIJ@?6reading?5to?5?$CFlld?5?0?5?$FL?$CFlld?5?$CFlld?5?$FN?$AA@" = linkonce_odr unnamed_addr constant [32 x i8] c"\0Areading to %lld , [%lld %lld ]\00", comdat, align 1
@"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA" = internal unnamed_addr global i64 0, align 8
@"\01??_C@_0BM@PJHDCAIH@?6?5?$FLERROR?$FNCorrupted?5slot?$CB?$CB?$CB?$CB?$AA@" = linkonce_odr unnamed_addr constant [28 x i8] c"\0A [ERROR]Corrupted slot!!!!\00", comdat, align 1
@"\01??_C@_0CE@OPKBMAFE@?6POOL?5is?5empty?0?5read?5from?5file?50@" = linkonce_odr unnamed_addr constant [36 x i8] c"\0APOOL is empty, read from file 0. \0A\00", comdat, align 1
@"\01??_C@_0CM@LHOLBNIE@?6?6Thread?5assigned?5to?5file?5part?5?$FL@" = linkonce_odr unnamed_addr constant [44 x i8] c"\0A\0AThread assigned to file part [%lld,%lld]\0A\00", comdat, align 1
@"\01??_C@_02JDPG@rb?$AA@" = linkonce_odr unnamed_addr constant [3 x i8] c"rb\00", comdat, align 1
@"\01??_C@_0EP@PGBLNION@?6?5?$FLERROR?$FNReading?5buffer?5for?5Time@" = linkonce_odr unnamed_addr constant [79 x i8] c"\0A [ERROR]Reading buffer for Time-tag file is not assgined properly, aborting.\0A\00", comdat, align 1
@"\01??_C@_0DE@PLFGPKJO@?6?5?$FLERROR?$FNTime?9tag?5file?5cannot?5be@" = linkonce_odr unnamed_addr constant [52 x i8] c"\0A [ERROR]Time-tag file cannot be opened, aborting.\0A\00", comdat, align 1
@"\01?order_gurantee@@3_JA" = local_unnamed_addr global i64 0, align 8
@SYNCRate_pspr = local_unnamed_addr global i64 0, align 8
@TTRes_pspr = local_unnamed_addr global i64 0, align 8
@DTRes_pspr = local_unnamed_addr global i64 0, align 8
@NumRecords = local_unnamed_addr global i64 -1, align 8
@RecordType = local_unnamed_addr global i64 0, align 8
@BytesofRecords = local_unnamed_addr global i64 0, align 8
@TTF_header_offset = local_unnamed_addr global i64 0, align 8
@TTF_filesize = local_unnamed_addr global i64 0, align 8
@IsT2 = local_unnamed_addr global i8 0, align 1
@"\01?TagHead@@3UTgHd@@A" = local_unnamed_addr global %struct.TgHd.5 zeroinitializer, align 8

define i32 @"_ZN8__main__12mainloop$241E5ArrayIaLi1E1C7mutable7alignedE5ArrayIxLi1E1C7mutable7alignedE35bytearray$28uint8$2c$201d$2c$20C$29xxxxxx"(i64* noalias nocapture %retptr, { i8*, i32 }** noalias nocapture readnone %excinfo, i8* noalias nocapture readnone %env, i8* %arg.chn.0, i8* nocapture readnone %arg.chn.1, i64 %arg.chn.2, i64 %arg.chn.3, i8* nocapture %arg.chn.4, i64 %arg.chn.5.0, i64 %arg.chn.6.0, i8* %arg.t1.0, i8* nocapture readnone %arg.t1.1, i64 %arg.t1.2, i64 %arg.t1.3, i64* nocapture %arg.t1.4, i64 %arg.t1.5.0, i64 %arg.t1.6.0, i8* nocapture readnone %arg.filename1.0, i8* nocapture readnone %arg.filename1.1, i64 %arg.filename1.2, i64 %arg.filename1.3, i8* nocapture readonly %arg.filename1.4, i64 %arg.filename1.5.0, i64 %arg.filename1.6.0, i64 %arg.fseekpoint, i64 %arg.fendpoint, i64 %arg.BytesofRecords, i64 %arg.TTRes_pspr, i64 %arg.SYNCRate_pspr, i64 %arg.DTRes_pspr) local_unnamed_addr {
entry:
  tail call void @NRT_incref(i8* %arg.chn.0)
  tail call void @NRT_incref(i8* %arg.t1.0)
  %0 = trunc i64 %arg.BytesofRecords to i32
  store i32 %0, i32* @READER_BytesofRecords, align 4
  store i64 %arg.fseekpoint, i64* @READER_fseekpoint, align 8
  store i64 %arg.fendpoint, i64* @READER_fendpoint, align 8
  store i64 %arg.TTRes_pspr, i64* @READER_TTRes_pspr, align 8
  store i64 %arg.DTRes_pspr, i64* @READER_DTRes_pspr, align 8
  store i64 %arg.SYNCRate_pspr, i64* @READER_SYNCRate_pspr, align 8
  %1 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @"\01??_C@_0CM@LHOLBNIE@?6?6Thread?5assigned?5to?5file?5part?5?$FL@", i64 0, i64 0), i64 %arg.fseekpoint, i64 %arg.fendpoint)
  %2 = sext i32 %1 to i64
  store i64 %2, i64* @order_gurantee2, align 8
  %3 = tail call { i8* }* @fopen(i8* %arg.filename1.4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"\01??_C@_02JDPG@rb?$AA@", i64 0, i64 0))
  store { i8* }* %3, { i8* }** @"\01?READER_fpin@@3PEAU_iobuf@@EA", align 8
  %4 = icmp eq { i8* }* %3, null
  br i1 %4, label %.sink.split.i, label %5

; <label>:5:                                      ; preds = %entry
  %6 = load i64, i64* @READER_fseekpoint, align 8
  %7 = tail call i32 @_fseeki64({ i8* }* nonnull %3, i64 %6, i32 0)
  %8 = load i64, i64* @READER_fseekpoint, align 8
  store i64 %8, i64* @READER_batchend_pos_in_file, align 8
  %9 = load i32, i32* @READER_BytesofRecords, align 4
  %10 = sext i32 %9 to i64
  %11 = mul nsw i64 %10, 1000
  %12 = tail call noalias i8* @malloc(i64 %11)
  store i8* %12, i8** @READER_buffer, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %.sink.split.i, label %FileReader_init.exit

.sink.split.i:                                    ; preds = %5, %entry
  %.sink.i = phi i8* [ getelementptr inbounds ([79 x i8], [79 x i8]* @"\01??_C@_0EP@PGBLNION@?6?5?$FLERROR?$FNReading?5buffer?5for?5Time@", i64 0, i64 0), %5 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @"\01??_C@_0DE@PLFGPKJO@?6?5?$FLERROR?$FNTime?9tag?5file?5cannot?5be@", i64 0, i64 0), %entry ]
  %14 = tail call i32 (i8*, ...) @printf(i8* nonnull %.sink.i)
  %15 = sext i32 %14 to i64
  store i64 %15, i64* @order_gurantee2, align 8
  br label %FileReader_init.exit

FileReader_init.exit:                             ; preds = %.sink.split.i, %5
  %.0.i = phi i64 [ 0, %5 ], [ -1, %.sink.split.i ]
  %const = bitcast i64 9223372036854775807 to i64
  store i8 3, i8* @POOL_total_slots, align 1
  %16 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"\01??_C@_0BB@NIGCBLED@?6TOTAL?5SLOTS?3?5?$CFd?$AA@", i64 0, i64 0), i32 3)
  %17 = sext i32 %16 to i64
  store i64 %17, i64* @order_gurantee2, align 8
  store i8 1, i8* @POOL_real_slots, align 1
  store i8 2, i8* @POOL_real_chns, align 1
  %18 = load i8, i8* @POOL_total_slots, align 1
  %19 = zext i8 %18 to i64
  %20 = shl nuw nsw i64 %19, 4
  %21 = tail call noalias i8* @malloc(i64 %20)
  store i8* %21, i8** bitcast (i64** @POOL_timetag to i8**), align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %.sink.split.i1, label %23

; <label>:23:                                     ; preds = %FileReader_init.exit
  %24 = shl nuw nsw i64 %19, 1
  %25 = tail call noalias i8* @malloc(i64 %24)
  store i8* %25, i8** @POOL_slot, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %.sink.split.i1, label %27

; <label>:27:                                     ; preds = %23
  %28 = trunc i64 %19 to i8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %._crit_edge.i, label %._crit_edge11.preheader.i

._crit_edge11.preheader.i:                        ; preds = %27
  %30 = bitcast i8* %21 to i64*
  %31 = trunc i64 %19 to i8
  store i64 %const, i64* %30, align 8
  store i8 0, i8* %25, align 1
  %scevgep24.i6 = getelementptr i8, i8* %21, i64 8
  %32 = bitcast i8* %scevgep24.i6 to i64*
  store i64 %const, i64* %32, align 8
  %scevgep23.i7 = getelementptr i8, i8* %25, i64 1
  store i8 0, i8* %scevgep23.i7, align 1
  %33 = icmp eq i8 %31, 1
  br i1 %33, label %.lr.ph4.i, label %._crit_edge11.._crit_edge11_crit_edge.i.lr.ph

._crit_edge11.._crit_edge11_crit_edge.i.lr.ph:    ; preds = %._crit_edge11.preheader.i
  %scevgep24.i17 = getelementptr i8, i8* %21, i64 16
  %34 = bitcast i8* %scevgep24.i17 to i64*
  store i64 %const, i64* %34, align 8
  %35 = load i8*, i8** @POOL_slot, align 8
  %scevgep23.i18 = getelementptr i8, i8* %35, i64 2
  store i8 0, i8* %scevgep23.i18, align 1
  %36 = load i8, i8* @POOL_total_slots, align 1
  %37 = icmp ugt i8 %36, 1
  br i1 %37, label %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge.preheader, label %._crit_edge8.i

._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge.preheader: ; preds = %._crit_edge11.._crit_edge11_crit_edge.i.lr.ph
  br label %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge

._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge: ; preds = %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge, %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge.preheader
  %indvars.iv.next10.i19 = phi i64 [ %indvars.iv.next10.i, %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge ], [ 3, %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge.preheader ]
  %.pre.pre.i.pre = load i64*, i64** @POOL_timetag, align 8
  %scevgep2 = getelementptr i64, i64* %.pre.pre.i.pre, i64 %indvars.iv.next10.i19
  store i64 %const, i64* %scevgep2, align 8
  %38 = load i8*, i8** @POOL_slot, align 8
  %scevgep = getelementptr i8, i8* %38, i64 %indvars.iv.next10.i19
  store i8 0, i8* %scevgep, align 1
  %indvars.iv.next10.i = add nuw nsw i64 %indvars.iv.next10.i19, 1
  %39 = load i8, i8* @POOL_total_slots, align 1
  %40 = zext i8 %39 to i64
  %41 = shl nuw nsw i64 %40, 1
  %42 = icmp ult i64 %indvars.iv.next10.i, %41
  br i1 %42, label %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge, label %._crit_edge8.i

._crit_edge8.i:                                   ; preds = %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge, %._crit_edge11.._crit_edge11_crit_edge.i.lr.ph
  %.lcssa = phi i8 [ %36, %._crit_edge11.._crit_edge11_crit_edge.i.lr.ph ], [ %39, %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge ]
  %43 = icmp eq i8 %.lcssa, 0
  br i1 %43, label %._crit_edge.i, label %.lr.ph4.i

.lr.ph4.i:                                        ; preds = %._crit_edge8.i, %._crit_edge11.preheader.i
  %.lcssa14 = phi i8 [ %.lcssa, %._crit_edge8.i ], [ 1, %._crit_edge11.preheader.i ]
  %44 = zext i8 %.lcssa14 to i32
  br label %45

; <label>:45:                                     ; preds = %45, %.lr.ph4.i
  %46 = phi i32 [ %44, %.lr.ph4.i ], [ %53, %45 ]
  %.0253.i = phi i32 [ 0, %.lr.ph4.i ], [ %51, %45 ]
  %47 = load i8*, i8** @POOL_slot, align 8
  %48 = add i32 %46, %.0253.i
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %47, i64 %49
  %tmp = trunc i32 %.0253.i to i8
  store i8 %tmp, i8* %50, align 1
  %51 = add nuw nsw i32 %.0253.i, 1
  %52 = load i8, i8* @POOL_total_slots, align 1
  %53 = zext i8 %52 to i32
  %54 = icmp ult i32 %51, %53
  br i1 %54, label %45, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %45, %._crit_edge8.i, %27
  %55 = tail call noalias i8* @malloc(i64 64)
  store i8* %55, i8** bitcast (%struct.circular_buf_t.4** @VSLOT_timetag to i8**), align 8
  %56 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"\01??_C@_0BG@NJEFHGP@?6Init?5ring?5buffer?5?$CFd?4?$AA@", i64 0, i64 0), i32 0)
  %57 = sext i32 %56 to i64
  store i64 %57, i64* @order_gurantee2, align 8
  %58 = load i8*, i8** bitcast (%struct.circular_buf_t.4** @VSLOT_timetag to i8**), align 8
  %scevgep19.i = getelementptr i8, i8* %58, i64 24
  %59 = bitcast i8* %scevgep19.i to i64*
  store i64 1000000, i64* %59, align 8
  %60 = icmp eq i8* %58, null
  br i1 %60, label %.lr.ph.i.111, label %61

; <label>:61:                                     ; preds = %._crit_edge.i
  %scevgep.i = getelementptr i8, i8* %58, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* %scevgep.i, i8 0, i64 16, i32 8, i1 false)
  br label %.lr.ph.i.111

.lr.ph.i.111:                                     ; preds = %61, %._crit_edge.i
  %62 = tail call noalias i8* @malloc(i64 8000000)
  %63 = bitcast i8* %58 to i8**
  store i8* %62, i8** %63, align 8
  %64 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"\01??_C@_0BG@NJEFHGP@?6Init?5ring?5buffer?5?$CFd?4?$AA@", i64 0, i64 0), i32 1)
  %65 = sext i32 %64 to i64
  store i64 %65, i64* @order_gurantee2, align 8
  %66 = load i8*, i8** bitcast (%struct.circular_buf_t.4** @VSLOT_timetag to i8**), align 8
  %uglygep17.i.1 = getelementptr i8, i8* %66, i64 32
  %scevgep19.i.1 = getelementptr i8, i8* %66, i64 56
  %67 = bitcast i8* %scevgep19.i.1 to i64*
  store i64 1000000, i64* %67, align 8
  %68 = icmp eq i8* %uglygep17.i.1, null
  br i1 %68, label %POOL_init.exit.loopexit12, label %377

.sink.split.i1:                                   ; preds = %23, %FileReader_init.exit
  %69 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @"\01??_C@_0CF@BDINJJIB@?6?5?$FLERROR?$FNMemalloc?5failed?0?5aborti@", i64 0, i64 0))
  %70 = sext i32 %69 to i64
  store i64 %70, i64* @order_gurantee2, align 8
  br label %POOL_init.exit

POOL_init.exit:                                   ; preds = %POOL_init.exit.loopexit12, %.sink.split.i1
  %.028.i = phi i64 [ -1, %.sink.split.i1 ], [ 0, %POOL_init.exit.loopexit12 ]
  br label %B110.outer.outer

B110.outer.outer:                                 ; preds = %B330, %POOL_init.exit
  %now_0.0.ph.ph = phi i64 [ 1, %POOL_init.exit ], [ %.now_0.0, %B330 ]
  %c1_start.0.ph.ph = phi i64 [ 0, %POOL_init.exit ], [ %.951.c1_start.0, %B330 ]
  %.386 = sub i64 16, %c1_start.0.ph.ph
  %.622 = sub i64 16, %c1_start.0.ph.ph
  br label %B110.outer

B110.outer:                                       ; preds = %B110.outer.backedge, %B110.outer.outer
  %now_0.0.ph = phi i64 [ %now_0.0.ph.ph, %B110.outer.outer ], [ 1, %B110.outer.backedge ]
  br label %B110

B110:                                             ; preds = %B120, %B134, %B110.outer
  %71 = load i64*, i64** @POOL_timetag, align 8
  %72 = getelementptr inbounds i64, i64* %71, i64 1
  %73 = load i64, i64* %72, align 8
  %74 = load i8*, i8** @POOL_slot, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 1
  %76 = load i8, i8* %75, align 1
  %77 = load i8, i8* @POOL_real_slots, align 1
  %promoted41.i = zext i8 %77 to i64
  %promoted40.i = zext i8 %76 to i64
  %78 = sub nsw i64 %promoted40.i, %promoted41.i
  %promoted.i = trunc i64 %78 to i32
  %79 = icmp slt i32 %promoted.i, 0
  %80 = load i8, i8* @POOL_slot0_last_chns, align 1
  %81 = load i8, i8* @POOL_real_chns, align 1
  %82 = zext i8 %81 to i32
  %83 = add nsw i32 %promoted.i, %82
  %84 = trunc i32 %83 to i8
  %.0232.i = select i1 %79, i8 %80, i8 %84
  store i8 %.0232.i, i8* %arg.chn.4, align 1
  %85 = icmp eq i64 %73, %const
  br i1 %85, label %279, label %86

; <label>:86:                                     ; preds = %B110
  %87 = icmp slt i32 %promoted.i, 0
  br i1 %87, label %88, label %179

; <label>:88:                                     ; preds = %86
  %89 = load i64, i64* @READER_next_RecID_relativeinbatch, align 8
  %90 = load i32, i32* @READER_BytesofRecords, align 4
  %91 = sext i32 %90 to i64
  %92 = mul nsw i64 %89, %91
  %93 = load i64, i64* @READER_batch_actualread_length, align 8
  %94 = icmp slt i64 %92, %93
  br i1 %94, label %111, label %95

; <label>:95:                                     ; preds = %88
  %96 = mul nsw i64 %91, 1000
  %97 = load i64, i64* @READER_batchend_pos_in_file, align 8
  %98 = add nsw i64 %97, %96
  %99 = load i64, i64* @READER_fendpoint, align 8
  %100 = icmp slt i64 %98, %99
  br i1 %100, label %104, label %.critedge.i

.critedge.i:                                      ; preds = %95
  %101 = load i64, i64* @READER_fseekpoint, align 8
  %102 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"\01??_C@_0CA@KHNGPAIJ@?6reading?5to?5?$CFlld?5?0?5?$FL?$CFlld?5?$CFlld?5?$FN?$AA@", i64 0, i64 0), i64 %97, i64 %101, i64 %99)
  %103 = sext i32 %102 to i64
  store i64 %103, i64* @order_gurantee2, align 8
  br label %146

; <label>:104:                                    ; preds = %95
  %105 = load { i8* }*, { i8* }** @"\01?READER_fpin@@3PEAU_iobuf@@EA", align 8
  %106 = load i8*, i8** @READER_buffer, align 8
  %107 = tail call i64 @fread(i8* %106, i64 1, i64 %96, { i8* }* %105)
  store i64 %107, i64* @READER_batch_actualread_length, align 8
  %108 = load i64, i64* @READER_batchend_pos_in_file, align 8
  %109 = add nsw i64 %108, %107
  store i64 %109, i64* @READER_batchend_pos_in_file, align 8
  store i64 0, i64* @READER_next_RecID_relativeinbatch, align 8
  %110 = icmp slt i64 %107, %96
  br i1 %110, label %146, label %111

; <label>:111:                                    ; preds = %104, %88
  %112 = phi i64 [ %89, %88 ], [ 0, %104 ]
  %.pre28.i = load i32*, i32** bitcast (i8** @READER_buffer to i32**), align 8
  br label %.backedge11.i

.backedge11.i:                                    ; preds = %.thread.i, %142, %111
  %113 = phi i64 [ %112, %111 ], [ %141, %.thread.i ], [ %143, %142 ]
  %114 = getelementptr inbounds i32, i32* %.pre28.i, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = icmp slt i32 %115, 0
  br i1 %116, label %117, label %130

; <label>:117:                                    ; preds = %.backedge11.i
  %118 = lshr i32 %115, 25
  %trunc7.i = trunc i32 %118 to i6
  %119 = zext i6 %trunc7.i to i8
  switch i8 %119, label %.thread.i [
    i8 63, label %120
    i8 0, label %123
  ]

; <label>:120:                                    ; preds = %117
  %121 = load i64, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  %122 = add i64 %121, 33552000
  store i64 %122, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  br label %.thread.i

; <label>:123:                                    ; preds = %117
  %124 = load i64, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  %125 = and i32 %115, 33554431
  %126 = zext i32 %125 to i64
  %127 = add nsw i64 %124, %126
  %128 = load i64, i64* @READER_TTRes_pspr, align 8
  %129 = mul nsw i64 %127, %128
  br label %142

; <label>:130:                                    ; preds = %.backedge11.i
  %131 = load i64, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  %132 = and i32 %115, 33554431
  %133 = zext i32 %132 to i64
  %134 = add nsw i64 %131, %133
  %135 = load i64, i64* @READER_TTRes_pspr, align 8
  %136 = mul nsw i64 %134, %135
  %137 = lshr i32 %115, 25
  %138 = and i32 %137, 63
  %139 = add nuw nsw i32 %138, 1
  %140 = trunc i32 %139 to i8
  br label %142

.thread.i:                                        ; preds = %120, %117
  %141 = add nsw i64 %113, 1
  store i64 %141, i64* @READER_next_RecID_relativeinbatch, align 8
  br label %.backedge11.i

; <label>:142:                                    ; preds = %130, %123
  %.0242.i = phi i64 [ %129, %123 ], [ %136, %130 ]
  %.0241.i = phi i8 [ 0, %123 ], [ %140, %130 ]
  %143 = add nsw i64 %113, 1
  store i64 %143, i64* @READER_next_RecID_relativeinbatch, align 8
  %144 = icmp eq i64 %.0242.i, %const
  br i1 %144, label %.backedge11.i, label %145

; <label>:145:                                    ; preds = %142
  store i8 %.0241.i, i8* @POOL_slot0_last_chns, align 1
  br label %146

; <label>:146:                                    ; preds = %145, %104, %.critedge.i
  %.0231.i = phi i64 [ %.0242.i, %145 ], [ %const, %.critedge.i ], [ %const, %104 ]
  %147 = load i8, i8* @POOL_total_slots, align 1
  %148 = add i8 %147, %76
  %149 = load i64*, i64** @POOL_timetag, align 8
  %150 = zext i8 %148 to i64
  %151 = getelementptr inbounds i64, i64* %149, i64 %150
  store i64 %.0231.i, i64* %151, align 8
  %152 = load i8*, i8** @POOL_slot, align 8
  %153 = getelementptr inbounds i8, i8* %152, i64 %150
  store i8 %76, i8* %153, align 1
  %154 = icmp ugt i8 %148, 1
  br i1 %154, label %.lr.ph19.i.preheader, label %POOL_next.exit

.lr.ph19.i.preheader:                             ; preds = %146
  br label %.lr.ph19.i

.lr.ph19.i:                                       ; preds = %176, %.lr.ph19.i.preheader
  %.022917.i = phi i8 [ %div4.i, %176 ], [ %148, %.lr.ph19.i.preheader ]
  %div4.i = lshr i8 %.022917.i, 1
  %155 = and i8 %.022917.i, -2
  %156 = or i8 %.022917.i, 1
  %157 = load i64*, i64** @POOL_timetag, align 8
  %158 = zext i8 %155 to i64
  %159 = getelementptr inbounds i64, i64* %157, i64 %158
  %160 = load i64, i64* %159, align 8
  %161 = zext i8 %156 to i64
  %162 = getelementptr inbounds i64, i64* %157, i64 %161
  %163 = load i64, i64* %162, align 8
  %164 = icmp slt i64 %160, %163
  %165 = zext i8 %div4.i to i64
  br i1 %164, label %166, label %171

; <label>:166:                                    ; preds = %.lr.ph19.i
  %sunkaddr = mul i64 %165, 8
  %167 = bitcast i64* %157 to i8*
  %sunkaddr3 = getelementptr i8, i8* %167, i64 %sunkaddr
  %168 = bitcast i8* %sunkaddr3 to i64*
  store i64 %160, i64* %168, align 8
  %169 = load i8*, i8** @POOL_slot, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 %158
  br label %176

; <label>:171:                                    ; preds = %.lr.ph19.i
  %sunkaddr4 = mul i64 %165, 8
  %172 = bitcast i64* %157 to i8*
  %sunkaddr5 = getelementptr i8, i8* %172, i64 %sunkaddr4
  %173 = bitcast i8* %sunkaddr5 to i64*
  store i64 %163, i64* %173, align 8
  %174 = load i8*, i8** @POOL_slot, align 8
  %175 = getelementptr inbounds i8, i8* %174, i64 %161
  br label %176

; <label>:176:                                    ; preds = %171, %166
  %.sink9.i = phi i8* [ %174, %171 ], [ %169, %166 ]
  %.sink7.in.i = phi i8* [ %175, %171 ], [ %170, %166 ]
  %.sink7.i = load i8, i8* %.sink7.in.i, align 1
  %177 = getelementptr inbounds i8, i8* %.sink9.i, i64 %165
  store i8 %.sink7.i, i8* %177, align 1
  %178 = icmp ugt i8 %.022917.i, 3
  br i1 %178, label %.lr.ph19.i, label %POOL_next.exit

; <label>:179:                                    ; preds = %86
  %180 = load %struct.circular_buf_t.4*, %struct.circular_buf_t.4** @VSLOT_timetag, align 8
  %.sroa.140.0..sroa_idx41.i = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %180, i64 %78, i32 1
  %.sroa.140.0.copyload.i = load i64, i64* %.sroa.140.0..sroa_idx41.i, align 8
  %.sroa.242.0..sroa_idx43.i = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %180, i64 %78, i32 2
  %.sroa.242.0.copyload.i = load i64, i64* %.sroa.242.0..sroa_idx43.i, align 8
  %181 = icmp eq i64 %.sroa.140.0.copyload.i, %.sroa.242.0.copyload.i
  br i1 %181, label %182, label %185

; <label>:182:                                    ; preds = %179
  %183 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"\01??_C@_0BM@PJHDCAIH@?6?5?$FLERROR?$FNCorrupted?5slot?$CB?$CB?$CB?$CB?$AA@", i64 0, i64 0))
  %184 = sext i32 %183 to i64
  store i64 %184, i64* @order_gurantee2, align 8
  %.pre.i2 = load %struct.circular_buf_t.4*, %struct.circular_buf_t.4** @VSLOT_timetag, align 8
  br label %185

; <label>:185:                                    ; preds = %182, %179
  %186 = phi %struct.circular_buf_t.4* [ %.pre.i2, %182 ], [ %180, %179 ]
  %187 = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %186, i64 %78
  %188 = icmp eq %struct.circular_buf_t.4* %187, null
  br i1 %188, label %211, label %189

; <label>:189:                                    ; preds = %185
  %.sroa.1168.0..sroa_idx169.i = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %186, i64 %78, i32 1
  %.sroa.1168.0.copyload.i = load i64, i64* %.sroa.1168.0..sroa_idx169.i, align 8
  %.sroa.2170.0..sroa_idx171.i = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %186, i64 %78, i32 2
  %.sroa.2170.0.copyload.i = load i64, i64* %.sroa.2170.0..sroa_idx171.i, align 8
  %190 = icmp eq i64 %.sroa.1168.0.copyload.i, %.sroa.2170.0.copyload.i
  br i1 %190, label %211, label %191

; <label>:191:                                    ; preds = %189
  %192 = bitcast %struct.circular_buf_t.4* %187 to i64**
  %193 = load i64*, i64** %192, align 8
  %194 = getelementptr inbounds i64, i64* %193, i64 %.sroa.2170.0.copyload.i
  %195 = load i64, i64* %194, align 8
  %196 = add i64 %.sroa.2170.0.copyload.i, 1
  %197 = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %186, i64 %78, i32 3
  %198 = load i64, i64* %197, align 8
  %199 = or i64 %196, %198
  %200 = and i64 %199, -4294967296
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %207

; <label>:202:                                    ; preds = %191
  %203 = trunc i64 %198 to i32
  %204 = trunc i64 %196 to i32
  %205 = urem i32 %204, %203
  %206 = zext i32 %205 to i64
  br label %209

; <label>:207:                                    ; preds = %191
  %208 = urem i64 %196, %198
  br label %209

; <label>:209:                                    ; preds = %207, %202
  %210 = phi i64 [ %206, %202 ], [ %208, %207 ]
  store i64 %210, i64* %.sroa.2170.0..sroa_idx171.i, align 8
  br label %211

; <label>:211:                                    ; preds = %209, %189, %185
  %.01.i = phi i64 [ undef, %189 ], [ %195, %209 ], [ undef, %185 ]
  %212 = load i8, i8* @POOL_total_slots, align 1
  %213 = add i8 %212, %76
  %214 = load i64*, i64** @POOL_timetag, align 8
  %215 = zext i8 %213 to i64
  %216 = getelementptr inbounds i64, i64* %214, i64 %215
  store i64 %.01.i, i64* %216, align 8
  %217 = load i8*, i8** @POOL_slot, align 8
  %218 = getelementptr inbounds i8, i8* %217, i64 %215
  store i8 %76, i8* %218, align 1
  %219 = icmp ugt i8 %213, 1
  br i1 %219, label %.lr.ph25.i.preheader, label %._crit_edge26.i

.lr.ph25.i.preheader:                             ; preds = %211
  br label %.lr.ph25.i

.lr.ph25.i:                                       ; preds = %241, %.lr.ph25.i.preheader
  %.022423.i = phi i8 [ %div3.i, %241 ], [ %213, %.lr.ph25.i.preheader ]
  %div3.i = lshr i8 %.022423.i, 1
  %220 = and i8 %.022423.i, -2
  %221 = or i8 %.022423.i, 1
  %222 = load i64*, i64** @POOL_timetag, align 8
  %223 = zext i8 %220 to i64
  %224 = getelementptr inbounds i64, i64* %222, i64 %223
  %225 = load i64, i64* %224, align 8
  %226 = zext i8 %221 to i64
  %227 = getelementptr inbounds i64, i64* %222, i64 %226
  %228 = load i64, i64* %227, align 8
  %229 = icmp slt i64 %225, %228
  %230 = zext i8 %div3.i to i64
  br i1 %229, label %231, label %236

; <label>:231:                                    ; preds = %.lr.ph25.i
  %sunkaddr6 = mul i64 %230, 8
  %232 = bitcast i64* %222 to i8*
  %sunkaddr7 = getelementptr i8, i8* %232, i64 %sunkaddr6
  %233 = bitcast i8* %sunkaddr7 to i64*
  store i64 %225, i64* %233, align 8
  %234 = load i8*, i8** @POOL_slot, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 %223
  br label %241

; <label>:236:                                    ; preds = %.lr.ph25.i
  %sunkaddr8 = mul i64 %230, 8
  %237 = bitcast i64* %222 to i8*
  %sunkaddr9 = getelementptr i8, i8* %237, i64 %sunkaddr8
  %238 = bitcast i8* %sunkaddr9 to i64*
  store i64 %228, i64* %238, align 8
  %239 = load i8*, i8** @POOL_slot, align 8
  %240 = getelementptr inbounds i8, i8* %239, i64 %226
  br label %241

; <label>:241:                                    ; preds = %236, %231
  %.sink15.i = phi i8* [ %239, %236 ], [ %234, %231 ]
  %.sink13.in.i = phi i8* [ %240, %236 ], [ %235, %231 ]
  %.sink13.i = load i8, i8* %.sink13.in.i, align 1
  %242 = getelementptr inbounds i8, i8* %.sink15.i, i64 %230
  store i8 %.sink13.i, i8* %242, align 1
  %243 = icmp ugt i8 %.022423.i, 3
  br i1 %243, label %.lr.ph25.i, label %._crit_edge26.i

._crit_edge26.i:                                  ; preds = %241, %211
  %244 = load %struct.circular_buf_t.4*, %struct.circular_buf_t.4** @VSLOT_timetag, align 8
  %.sroa.1.0..sroa_idx36.i = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %244, i64 %78, i32 1
  %.sroa.1.0.copyload.i = load i64, i64* %.sroa.1.0..sroa_idx36.i, align 8
  %.sroa.2.0..sroa_idx37.i = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %244, i64 %78, i32 2
  %.sroa.2.0.copyload.i = load i64, i64* %.sroa.2.0..sroa_idx37.i, align 8
  %245 = icmp eq i64 %.sroa.1.0.copyload.i, %.sroa.2.0.copyload.i
  br i1 %245, label %246, label %POOL_next.exit

; <label>:246:                                    ; preds = %._crit_edge26.i
  %247 = load i8, i8* @POOL_total_slots, align 1
  %248 = add i8 %247, %76
  %249 = load i64*, i64** @POOL_timetag, align 8
  %250 = zext i8 %248 to i64
  %251 = getelementptr inbounds i64, i64* %249, i64 %250
  store i64 %const, i64* %251, align 8
  %252 = load i8*, i8** @POOL_slot, align 8
  %253 = getelementptr inbounds i8, i8* %252, i64 %250
  store i8 %76, i8* %253, align 1
  %254 = icmp ugt i8 %248, 1
  br i1 %254, label %.lr.ph22.i.preheader, label %POOL_next.exit

.lr.ph22.i.preheader:                             ; preds = %246
  br label %.lr.ph22.i

.lr.ph22.i:                                       ; preds = %276, %.lr.ph22.i.preheader
  %.020.i = phi i8 [ %div2.i, %276 ], [ %248, %.lr.ph22.i.preheader ]
  %div2.i = lshr i8 %.020.i, 1
  %255 = and i8 %.020.i, -2
  %256 = or i8 %.020.i, 1
  %257 = load i64*, i64** @POOL_timetag, align 8
  %258 = zext i8 %255 to i64
  %259 = getelementptr inbounds i64, i64* %257, i64 %258
  %260 = load i64, i64* %259, align 8
  %261 = zext i8 %256 to i64
  %262 = getelementptr inbounds i64, i64* %257, i64 %261
  %263 = load i64, i64* %262, align 8
  %264 = icmp slt i64 %260, %263
  %265 = zext i8 %div2.i to i64
  br i1 %264, label %266, label %271

; <label>:266:                                    ; preds = %.lr.ph22.i
  %sunkaddr10 = mul i64 %265, 8
  %267 = bitcast i64* %257 to i8*
  %sunkaddr11 = getelementptr i8, i8* %267, i64 %sunkaddr10
  %268 = bitcast i8* %sunkaddr11 to i64*
  store i64 %260, i64* %268, align 8
  %269 = load i8*, i8** @POOL_slot, align 8
  %270 = getelementptr inbounds i8, i8* %269, i64 %258
  br label %276

; <label>:271:                                    ; preds = %.lr.ph22.i
  %sunkaddr12 = mul i64 %265, 8
  %272 = bitcast i64* %257 to i8*
  %sunkaddr13 = getelementptr i8, i8* %272, i64 %sunkaddr12
  %273 = bitcast i8* %sunkaddr13 to i64*
  store i64 %263, i64* %273, align 8
  %274 = load i8*, i8** @POOL_slot, align 8
  %275 = getelementptr inbounds i8, i8* %274, i64 %261
  br label %276

; <label>:276:                                    ; preds = %271, %266
  %.sink20.i = phi i8* [ %274, %271 ], [ %269, %266 ]
  %.sink18.in.i = phi i8* [ %275, %271 ], [ %270, %266 ]
  %.sink18.i = load i8, i8* %.sink18.in.i, align 1
  %277 = getelementptr inbounds i8, i8* %.sink20.i, i64 %265
  store i8 %.sink18.i, i8* %277, align 1
  %278 = icmp ugt i8 %.020.i, 3
  br i1 %278, label %.lr.ph22.i, label %POOL_next.exit

; <label>:279:                                    ; preds = %B110
  %280 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"\01??_C@_0CE@OPKBMAFE@?6POOL?5is?5empty?0?5read?5from?5file?50@", i64 0, i64 0))
  %281 = sext i32 %280 to i64
  store i64 %281, i64* @order_gurantee2, align 8
  %282 = load i64, i64* @READER_next_RecID_relativeinbatch, align 8
  %283 = load i32, i32* @READER_BytesofRecords, align 4
  %284 = sext i32 %283 to i64
  %285 = mul nsw i64 %282, %284
  %286 = load i64, i64* @READER_batch_actualread_length, align 8
  %287 = icmp slt i64 %285, %286
  br i1 %287, label %304, label %288

; <label>:288:                                    ; preds = %279
  %289 = mul nsw i64 %284, 1000
  %290 = load i64, i64* @READER_batchend_pos_in_file, align 8
  %291 = add nsw i64 %290, %289
  %292 = load i64, i64* @READER_fendpoint, align 8
  %293 = icmp slt i64 %291, %292
  br i1 %293, label %297, label %.critedge8.i

.critedge8.i:                                     ; preds = %288
  %294 = load i64, i64* @READER_fseekpoint, align 8
  %295 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"\01??_C@_0CA@KHNGPAIJ@?6reading?5to?5?$CFlld?5?0?5?$FL?$CFlld?5?$CFlld?5?$FN?$AA@", i64 0, i64 0), i64 %290, i64 %294, i64 %292)
  %296 = sext i32 %295 to i64
  store i64 %296, i64* @order_gurantee2, align 8
  br label %339

; <label>:297:                                    ; preds = %288
  %298 = load { i8* }*, { i8* }** @"\01?READER_fpin@@3PEAU_iobuf@@EA", align 8
  %299 = load i8*, i8** @READER_buffer, align 8
  %300 = tail call i64 @fread(i8* %299, i64 1, i64 %289, { i8* }* %298)
  store i64 %300, i64* @READER_batch_actualread_length, align 8
  %301 = load i64, i64* @READER_batchend_pos_in_file, align 8
  %302 = add nsw i64 %301, %300
  store i64 %302, i64* @READER_batchend_pos_in_file, align 8
  store i64 0, i64* @READER_next_RecID_relativeinbatch, align 8
  %303 = icmp slt i64 %300, %289
  br i1 %303, label %339, label %304

; <label>:304:                                    ; preds = %297, %279
  %305 = phi i64 [ %282, %279 ], [ 0, %297 ]
  %.pre29.i = load i32*, i32** bitcast (i8** @READER_buffer to i32**), align 8
  br label %.backedge.i

.backedge.i:                                      ; preds = %.thread13.i, %335, %304
  %306 = phi i64 [ %305, %304 ], [ %334, %.thread13.i ], [ %336, %335 ]
  %307 = getelementptr inbounds i32, i32* %.pre29.i, i64 %306
  %308 = load i32, i32* %307, align 4
  %309 = icmp slt i32 %308, 0
  br i1 %309, label %310, label %323

; <label>:310:                                    ; preds = %.backedge.i
  %311 = lshr i32 %308, 25
  %trunc10.i = trunc i32 %311 to i6
  %312 = zext i6 %trunc10.i to i8
  switch i8 %312, label %.thread13.i [
    i8 63, label %313
    i8 0, label %316
  ]

; <label>:313:                                    ; preds = %310
  %314 = load i64, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  %315 = add i64 %314, 33552000
  store i64 %315, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  br label %.thread13.i

; <label>:316:                                    ; preds = %310
  %317 = load i64, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  %318 = and i32 %308, 33554431
  %319 = zext i32 %318 to i64
  %320 = add nsw i64 %317, %319
  %321 = load i64, i64* @READER_TTRes_pspr, align 8
  %322 = mul nsw i64 %320, %321
  br label %335

; <label>:323:                                    ; preds = %.backedge.i
  %324 = load i64, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  %325 = and i32 %308, 33554431
  %326 = zext i32 %325 to i64
  %327 = add nsw i64 %324, %326
  %328 = load i64, i64* @READER_TTRes_pspr, align 8
  %329 = mul nsw i64 %327, %328
  %330 = lshr i32 %308, 25
  %331 = and i32 %330, 63
  %332 = add nuw nsw i32 %331, 1
  %333 = trunc i32 %332 to i8
  br label %335

.thread13.i:                                      ; preds = %313, %310
  %334 = add nsw i64 %306, 1
  store i64 %334, i64* @READER_next_RecID_relativeinbatch, align 8
  br label %.backedge.i

; <label>:335:                                    ; preds = %323, %316
  %.0240.i = phi i64 [ %322, %316 ], [ %329, %323 ]
  %.0239.i = phi i8 [ 0, %316 ], [ %333, %323 ]
  %336 = add nsw i64 %306, 1
  store i64 %336, i64* @READER_next_RecID_relativeinbatch, align 8
  %337 = icmp eq i64 %.0240.i, %const
  br i1 %337, label %.backedge.i, label %338

; <label>:338:                                    ; preds = %335
  store i8 %.0239.i, i8* @POOL_slot0_last_chns, align 1
  br label %339

; <label>:339:                                    ; preds = %338, %297, %.critedge8.i
  %.0227.i = phi i64 [ %.0240.i, %338 ], [ %const, %.critedge8.i ], [ %const, %297 ]
  %340 = load i8, i8* @POOL_total_slots, align 1
  %341 = load i64*, i64** @POOL_timetag, align 8
  %342 = zext i8 %340 to i64
  %343 = getelementptr inbounds i64, i64* %341, i64 %342
  store i64 %.0227.i, i64* %343, align 8
  %344 = load i8*, i8** @POOL_slot, align 8
  %345 = getelementptr inbounds i8, i8* %344, i64 %342
  store i8 0, i8* %345, align 1
  %346 = icmp ugt i8 %340, 1
  br i1 %346, label %.lr.ph.i3.preheader, label %._crit_edge.i4

.lr.ph.i3.preheader:                              ; preds = %339
  br label %.lr.ph.i3

.lr.ph.i3:                                        ; preds = %368, %.lr.ph.i3.preheader
  %.022816.i = phi i8 [ %div.i, %368 ], [ %340, %.lr.ph.i3.preheader ]
  %div.i = lshr i8 %.022816.i, 1
  %347 = and i8 %.022816.i, -2
  %348 = or i8 %.022816.i, 1
  %349 = load i64*, i64** @POOL_timetag, align 8
  %350 = zext i8 %347 to i64
  %351 = getelementptr inbounds i64, i64* %349, i64 %350
  %352 = load i64, i64* %351, align 8
  %353 = zext i8 %348 to i64
  %354 = getelementptr inbounds i64, i64* %349, i64 %353
  %355 = load i64, i64* %354, align 8
  %356 = icmp slt i64 %352, %355
  %357 = zext i8 %div.i to i64
  br i1 %356, label %358, label %363

; <label>:358:                                    ; preds = %.lr.ph.i3
  %sunkaddr14 = mul i64 %357, 8
  %359 = bitcast i64* %349 to i8*
  %sunkaddr15 = getelementptr i8, i8* %359, i64 %sunkaddr14
  %360 = bitcast i8* %sunkaddr15 to i64*
  store i64 %352, i64* %360, align 8
  %361 = load i8*, i8** @POOL_slot, align 8
  %362 = getelementptr inbounds i8, i8* %361, i64 %350
  br label %368

; <label>:363:                                    ; preds = %.lr.ph.i3
  %sunkaddr16 = mul i64 %357, 8
  %364 = bitcast i64* %349 to i8*
  %sunkaddr17 = getelementptr i8, i8* %364, i64 %sunkaddr16
  %365 = bitcast i8* %sunkaddr17 to i64*
  store i64 %355, i64* %365, align 8
  %366 = load i8*, i8** @POOL_slot, align 8
  %367 = getelementptr inbounds i8, i8* %366, i64 %353
  br label %368

; <label>:368:                                    ; preds = %363, %358
  %.sink33.i = phi i8* [ %366, %363 ], [ %361, %358 ]
  %.sink31.in.i = phi i8* [ %367, %363 ], [ %362, %358 ]
  %.sink31.i = load i8, i8* %.sink31.in.i, align 1
  %369 = getelementptr inbounds i8, i8* %.sink33.i, i64 %357
  store i8 %.sink31.i, i8* %369, align 1
  %370 = icmp ugt i8 %.022816.i, 3
  br i1 %370, label %.lr.ph.i3, label %._crit_edge.i4

._crit_edge.i4:                                   ; preds = %368, %339
  %371 = load i8, i8* @POOL_slot0_last_chns, align 1
  store i8 %371, i8* %arg.chn.4, align 1
  %372 = load i64*, i64** @POOL_timetag, align 8
  %373 = getelementptr inbounds i64, i64* %372, i64 1
  %374 = load i64, i64* %373, align 8
  br label %POOL_next.exit

POOL_next.exit:                                   ; preds = %276, %176, %._crit_edge.i4, %246, %._crit_edge26.i, %146
  %.0233.i = phi i64 [ %374, %._crit_edge.i4 ], [ %73, %._crit_edge26.i ], [ %73, %146 ], [ %73, %246 ], [ %73, %176 ], [ %73, %276 ]
  %.285 = icmp eq i64 %.0233.i, %const
  br i1 %.285, label %B386, label %B120

B120:                                             ; preds = %POOL_next.exit
  %.328 = load i8, i8* %arg.chn.4, align 1
  switch i8 %.328, label %B110 [
    i8 1, label %B134
    i8 0, label %B330
  ]

B134:                                             ; preds = %B120
  switch i64 %now_0.0.ph, label %B110 [
    i64 0, label %B110.outer.backedge.loopexit
    i64 1, label %B232.endif
  ]

B330:                                             ; preds = %B120
  %switch = icmp ult i64 %now_0.0.ph, 2
  %.now_0.0 = select i1 %switch, i64 0, i64 %now_0.0.ph
  %.951.c1_start.0 = select i1 %switch, i64 %.0233.i, i64 %c1_start.0.ph.ph
  br label %B110.outer.outer

B386:                                             ; preds = %POOL_next.exit
  %.198 = add nsw i64 %.028.i, %.0.i
  tail call void @NRT_decref(i8* %arg.t1.0)
  tail call void @NRT_decref(i8* %arg.chn.0)
  store i64 %.198, i64* %retptr, align 8
  ret i32 0

B110.outer.backedge.loopexit:                     ; preds = %B134
  br label %B110.outer.backedge

B110.outer.backedge:                              ; preds = %B110.outer.backedge.loopexit, %B232.endif
  %.386.sink = phi i64 [ %.622, %B232.endif ], [ %.386, %B110.outer.backedge.loopexit ]
  %.410 = add i64 %.386.sink, %.0233.i
  %.423 = sitofp i64 %.410 to double
  %.429 = fmul double %.423, 6.250000e-02
  %.438 = fptosi double %.429 to i64
  %375 = icmp slt i64 %.438, 62501
  %n_i.1 = select i1 %375, i64 %.438, i64 62501
  %376 = icmp sgt i64 %.438, 0
  %.n_i.1 = select i1 %376, i64 %n_i.1, i64 0
  %.532 = getelementptr i64, i64* %arg.t1.4, i64 %.n_i.1
  %.533 = load i64, i64* %.532, align 8
  %.542 = add nsw i64 %.533, 1
  store i64 %.542, i64* %.532, align 8
  br label %B110.outer

B232.endif:                                       ; preds = %B134
  br label %B110.outer.backedge

; <label>:377:                                    ; preds = %.lr.ph.i.111
  %scevgep.i.1 = getelementptr i8, i8* %66, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* %scevgep.i.1, i8 0, i64 16, i32 8, i1 false)
  br label %POOL_init.exit.loopexit12

POOL_init.exit.loopexit12:                        ; preds = %377, %.lr.ph.i.111
  %378 = tail call noalias i8* @malloc(i64 8000000)
  %379 = bitcast i8* %uglygep17.i.1 to i8**
  store i8* %378, i8** %379, align 8
  br label %POOL_init.exit
}

define i8* @"_ZN7cpython8__main__12mainloop$241E5ArrayIaLi1E1C7mutable7alignedE5ArrayIxLi1E1C7mutable7alignedE35bytearray$28uint8$2c$201d$2c$20C$29xxxxxx"(i8* %py_closure, i8* %py_args, i8* nocapture readnone %py_kws) local_unnamed_addr {
entry:
  %.5 = alloca i8*, align 8
  %.6 = alloca i8*, align 8
  %.7 = alloca i8*, align 8
  %.8 = alloca i8*, align 8
  %.9 = alloca i8*, align 8
  %.10 = alloca i8*, align 8
  %.11 = alloca i8*, align 8
  %.12 = alloca i8*, align 8
  %.13 = alloca i8*, align 8
  %.14 = call i32 (i8*, i8*, i64, i64, ...) @PyArg_UnpackTuple(i8* %py_args, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.const.mainloop, i64 0, i64 0), i64 9, i64 9, i8** nonnull %.5, i8** nonnull %.6, i8** nonnull %.7, i8** nonnull %.8, i8** nonnull %.9, i8** nonnull %.10, i8** nonnull %.11, i8** nonnull %.12, i8** nonnull %.13)
  %.15 = icmp eq i32 %.14, 0
  %.38 = alloca { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }, align 8
  %.49 = alloca { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }, align 8
  %0 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull %0, i8 0, i64 56, i32 8, i1 false)
  %.60 = alloca [80 x i8], align 1
  %.64 = alloca { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }, align 8
  %1 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull %1, i8 0, i64 56, i32 8, i1 false)
  %.168 = alloca i64, align 8
  %2 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull %2, i8 0, i64 56, i32 8, i1 false)
  br i1 %.15, label %entry.if, label %entry.endif, !prof !4

entry.if:                                         ; preds = %arg0.err, %entry.endif.endif.endif, %entry
  ret i8* null

entry.endif:                                      ; preds = %entry
  %.19 = icmp eq i8* %py_closure, null
  br i1 %.19, label %entry.endif.if, label %entry.endif.endif, !prof !4

entry.endif.if:                                   ; preds = %entry.endif
  %.21 = call i32 @puts(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @".const.Fatal error: missing _dynfunc.Closure", i64 0, i64 0))
  unreachable

entry.endif.endif:                                ; preds = %entry.endif
  %.23 = ptrtoint i8* %py_closure to i64
  %.24 = add i64 %.23, 24
  %.26 = inttoptr i64 %.24 to { i8* }*
  %.274 = bitcast { i8* }* %.26 to i8**
  %.28 = load i8*, i8** %.274, align 8
  %.33 = icmp eq i8* %.28, null
  br i1 %.33, label %entry.endif.endif.if, label %entry.endif.endif.endif, !prof !4

entry.endif.endif.if:                             ; preds = %entry.endif.endif
  call void @PyErr_SetString(i8* nonnull @PyExc_RuntimeError, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @".const.missing Environment", i64 0, i64 0))
  ret i8* null

entry.endif.endif.endif:                          ; preds = %entry.endif.endif
  %3 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8**
  %.37 = load i8*, i8** %.5, align 8
  %.40 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %.41 = call i32 @NRT_adapt_ndarray_from_python(i8* %.37, i8* nonnull %.40)
  %.42 = icmp eq i32 %.41, 0
  %.43.fca.0.load = load i8*, i8** %3, align 8
  %4 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %sunkaddr = getelementptr i8, i8* %4, i64 8
  %5 = bitcast i8* %sunkaddr to i8**
  %.43.fca.1.load = load i8*, i8** %5, align 8
  %6 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %sunkaddr5 = getelementptr i8, i8* %6, i64 16
  %7 = bitcast i8* %sunkaddr5 to i64*
  %.43.fca.2.load = load i64, i64* %7, align 8
  %8 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %sunkaddr6 = getelementptr i8, i8* %8, i64 24
  %9 = bitcast i8* %sunkaddr6 to i64*
  %.43.fca.3.load = load i64, i64* %9, align 8
  %10 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %sunkaddr7 = getelementptr i8, i8* %10, i64 32
  %11 = bitcast i8* %sunkaddr7 to i8**
  %.43.fca.4.load = load i8*, i8** %11, align 8
  %12 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %sunkaddr8 = getelementptr i8, i8* %12, i64 40
  %13 = bitcast i8* %sunkaddr8 to i64*
  %.43.fca.5.0.load = load i64, i64* %13, align 8
  %14 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %sunkaddr9 = getelementptr i8, i8* %14, i64 48
  %15 = bitcast i8* %sunkaddr9 to i64*
  %.43.fca.6.0.load = load i64, i64* %15, align 8
  br i1 %.42, label %entry.endif.endif.endif.endif, label %entry.if, !prof !5

entry.endif.endif.endif.endif:                    ; preds = %entry.endif.endif.endif
  %16 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8**
  %.48 = load i8*, i8** %.6, align 8
  %.51 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %.52 = call i32 @NRT_adapt_ndarray_from_python(i8* %.48, i8* nonnull %.51)
  %.53 = icmp eq i32 %.52, 0
  %.54.fca.0.load = load i8*, i8** %16, align 8
  %17 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %sunkaddr10 = getelementptr i8, i8* %17, i64 8
  %18 = bitcast i8* %sunkaddr10 to i8**
  %.54.fca.1.load = load i8*, i8** %18, align 8
  %19 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %sunkaddr11 = getelementptr i8, i8* %19, i64 16
  %20 = bitcast i8* %sunkaddr11 to i64*
  %.54.fca.2.load = load i64, i64* %20, align 8
  %21 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %sunkaddr12 = getelementptr i8, i8* %21, i64 24
  %22 = bitcast i8* %sunkaddr12 to i64*
  %.54.fca.3.load = load i64, i64* %22, align 8
  %23 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %sunkaddr13 = getelementptr i8, i8* %23, i64 32
  %24 = bitcast i8* %sunkaddr13 to i64**
  %.54.fca.4.load = load i64*, i64** %24, align 8
  %25 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %sunkaddr14 = getelementptr i8, i8* %25, i64 40
  %26 = bitcast i8* %sunkaddr14 to i64*
  %.54.fca.5.0.load = load i64, i64* %26, align 8
  %27 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %sunkaddr15 = getelementptr i8, i8* %27, i64 48
  %28 = bitcast i8* %sunkaddr15 to i64*
  %.54.fca.6.0.load = load i64, i64* %28, align 8
  br i1 %.53, label %entry.endif.endif.endif.endif.endif, label %arg0.err, !prof !5

arg0.err:                                         ; preds = %arg1.err, %entry.endif.endif.endif.endif
  call void @NRT_decref(i8* %.43.fca.0.load)
  br label %entry.if

entry.endif.endif.endif.endif.endif:              ; preds = %entry.endif.endif.endif.endif
  %.59 = load i8*, i8** %.7, align 8
  %.fca.0.gep116 = bitcast [80 x i8]* %.60 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull %.fca.0.gep116, i8 0, i64 80, i32 1, i1 false)
  %.62 = call i32 @numba_get_buffer(i8* %.59, [80 x i8]* nonnull %.60)
  %.63 = icmp ne i32 %.62, 0
  br i1 %.63, label %entry.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.if, !prof !4

arg1.err:                                         ; preds = %arg2.err, %entry.endif.endif.endif.endif.endif.endif
  call void @NRT_decref(i8* %.54.fca.0.load)
  br label %arg0.err

entry.endif.endif.endif.endif.endif.if:           ; preds = %entry.endif.endif.endif.endif.endif
  %.68 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  call void @NRT_adapt_buffer_from_python([80 x i8]* nonnull %.60, i8* nonnull %.68)
  br label %entry.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif:        ; preds = %entry.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif
  %29 = icmp ne i32 %.62, 0
  %30 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8**
  %.71.fca.0.load = load i8*, i8** %30, align 8
  %31 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  %sunkaddr17 = getelementptr i8, i8* %31, i64 8
  %32 = bitcast i8* %sunkaddr17 to i8**
  %.71.fca.1.load = load i8*, i8** %32, align 8
  %33 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  %sunkaddr18 = getelementptr i8, i8* %33, i64 16
  %34 = bitcast i8* %sunkaddr18 to i64*
  %.71.fca.2.load = load i64, i64* %34, align 8
  %35 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  %sunkaddr19 = getelementptr i8, i8* %35, i64 24
  %36 = bitcast i8* %sunkaddr19 to i64*
  %.71.fca.3.load = load i64, i64* %36, align 8
  %37 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  %sunkaddr20 = getelementptr i8, i8* %37, i64 32
  %38 = bitcast i8* %sunkaddr20 to i8**
  %.71.fca.4.load = load i8*, i8** %38, align 8
  %39 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  %sunkaddr21 = getelementptr i8, i8* %39, i64 40
  %40 = bitcast i8* %sunkaddr21 to i64*
  %.71.fca.5.0.load = load i64, i64* %40, align 8
  %41 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  %sunkaddr22 = getelementptr i8, i8* %41, i64 48
  %42 = bitcast i8* %sunkaddr22 to i64*
  %.71.fca.6.0.load = load i64, i64* %42, align 8
  br i1 %29, label %arg1.err, label %entry.endif.endif.endif.endif.endif.endif.endif, !prof !4

entry.endif.endif.endif.endif.endif.endif.endif:  ; preds = %entry.endif.endif.endif.endif.endif.endif
  %.77 = load i8*, i8** %.8, align 8
  %.79 = call i8* @PyNumber_Long(i8* %.77)
  %.80 = icmp eq i8* %.79, null
  br i1 %.80, label %entry.endif.endif.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.endif.endif.if, !prof !4

arg2.err:                                         ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, %entry.endif.endif.endif.endif.endif.endif.endif.endif
  call void @numba_release_buffer([80 x i8]* nonnull %.60)
  call void @NRT_decref(i8* %.71.fca.0.load)
  br label %arg1.err

entry.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif
  %.82 = call i64 @PyLong_AsLongLong(i8* nonnull %.79)
  call void @Py_DecRef(i8* nonnull %.79)
  br label %entry.endif.endif.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif.endif.endif
  %.78.0 = phi i64 [ %.82, %entry.endif.endif.endif.endif.endif.endif.endif.if ], [ undef, %entry.endif.endif.endif.endif.endif.endif.endif ]
  %.87 = call i8* @PyErr_Occurred()
  %.88 = icmp eq i8* %.87, null
  br i1 %.88, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %arg2.err, !prof !5

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif
  %.92 = load i8*, i8** %.9, align 8
  %.94 = call i8* @PyNumber_Long(i8* %.92)
  %.95 = icmp eq i8* %.94, null
  br i1 %.95, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, !prof !4

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.97 = call i64 @PyLong_AsLongLong(i8* nonnull %.94)
  call void @Py_DecRef(i8* nonnull %.94)
  br label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.93.0 = phi i64 [ %.97, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ undef, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif ]
  %.102 = call i8* @PyErr_Occurred()
  %.103 = icmp eq i8* %.102, null
  br i1 %.103, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %arg2.err, !prof !5

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.107 = load i8*, i8** %.10, align 8
  %.109 = call i8* @PyNumber_Long(i8* %.107)
  %.110 = icmp eq i8* %.109, null
  br i1 %.110, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, !prof !4

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.112 = call i64 @PyLong_AsLongLong(i8* nonnull %.109)
  call void @Py_DecRef(i8* nonnull %.109)
  br label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.108.0 = phi i64 [ %.112, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ undef, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif ]
  %.117 = call i8* @PyErr_Occurred()
  %.118 = icmp eq i8* %.117, null
  br i1 %.118, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %arg2.err, !prof !5

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.122 = load i8*, i8** %.11, align 8
  %.124 = call i8* @PyNumber_Long(i8* %.122)
  %.125 = icmp eq i8* %.124, null
  br i1 %.125, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, !prof !4

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.127 = call i64 @PyLong_AsLongLong(i8* nonnull %.124)
  call void @Py_DecRef(i8* nonnull %.124)
  br label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.123.0 = phi i64 [ %.127, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ undef, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif ]
  %.132 = call i8* @PyErr_Occurred()
  %.133 = icmp eq i8* %.132, null
  br i1 %.133, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %arg2.err, !prof !5

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.137 = load i8*, i8** %.12, align 8
  %.139 = call i8* @PyNumber_Long(i8* %.137)
  %.140 = icmp eq i8* %.139, null
  br i1 %.140, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, !prof !4

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.142 = call i64 @PyLong_AsLongLong(i8* nonnull %.139)
  call void @Py_DecRef(i8* nonnull %.139)
  br label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.138.0 = phi i64 [ %.142, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ undef, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif ]
  %.147 = call i8* @PyErr_Occurred()
  %.148 = icmp eq i8* %.147, null
  br i1 %.148, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %arg2.err, !prof !5

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.152 = load i8*, i8** %.13, align 8
  %.154 = call i8* @PyNumber_Long(i8* %.152)
  %.155 = icmp eq i8* %.154, null
  br i1 %.155, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, !prof !4

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.157 = call i64 @PyLong_AsLongLong(i8* nonnull %.154)
  call void @Py_DecRef(i8* nonnull %.154)
  br label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.153.0 = phi i64 [ %.157, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ undef, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif ]
  %.162 = call i8* @PyErr_Occurred()
  %.163 = icmp eq i8* %.162, null
  br i1 %.163, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %arg2.err, !prof !5

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.167 = call i8* @PyEval_SaveThread()
  store i64 0, i64* %.168, align 8
  %.176 = call i32 @"_ZN8__main__12mainloop$241E5ArrayIaLi1E1C7mutable7alignedE5ArrayIxLi1E1C7mutable7alignedE35bytearray$28uint8$2c$201d$2c$20C$29xxxxxx"(i64* nonnull %.168, { i8*, i32 }** undef, i8* undef, i8* %.43.fca.0.load, i8* %.43.fca.1.load, i64 %.43.fca.2.load, i64 %.43.fca.3.load, i8* %.43.fca.4.load, i64 %.43.fca.5.0.load, i64 %.43.fca.6.0.load, i8* %.54.fca.0.load, i8* %.54.fca.1.load, i64 %.54.fca.2.load, i64 %.54.fca.3.load, i64* %.54.fca.4.load, i64 %.54.fca.5.0.load, i64 %.54.fca.6.0.load, i8* %.71.fca.0.load, i8* %.71.fca.1.load, i64 %.71.fca.2.load, i64 %.71.fca.3.load, i8* %.71.fca.4.load, i64 %.71.fca.5.0.load, i64 %.71.fca.6.0.load, i64 %.78.0, i64 %.93.0, i64 %.108.0, i64 %.123.0, i64 %.138.0, i64 %.153.0)
  %.186 = load i64, i64* %.168, align 8
  call void @PyEval_RestoreThread(i8* %.167)
  call void @numba_release_buffer([80 x i8]* nonnull %.60)
  call void @NRT_decref(i8* %.43.fca.0.load)
  call void @NRT_decref(i8* %.54.fca.0.load)
  call void @NRT_decref(i8* %.71.fca.0.load)
  %.197 = call i8* @PyLong_FromLongLong(i64 %.186)
  ret i8* %.197
}

declare i32 @PyArg_UnpackTuple(i8*, i8*, i64, i64, ...) local_unnamed_addr

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #0

declare void @PyErr_SetString(i8*, i8*) local_unnamed_addr

declare i32 @NRT_adapt_ndarray_from_python(i8* nocapture, i8* nocapture) local_unnamed_addr

declare i32 @numba_get_buffer(i8*, [80 x i8]*) local_unnamed_addr

declare void @NRT_adapt_buffer_from_python([80 x i8]* nocapture, i8* nocapture) local_unnamed_addr

declare i8* @PyNumber_Long(i8*) local_unnamed_addr

declare void @numba_release_buffer([80 x i8]*) local_unnamed_addr

declare i64 @PyLong_AsLongLong(i8*) local_unnamed_addr

declare void @Py_DecRef(i8*) local_unnamed_addr

declare i8* @PyErr_Occurred() local_unnamed_addr

declare i8* @PyEval_SaveThread() local_unnamed_addr

declare void @PyEval_RestoreThread(i8*) local_unnamed_addr

declare i8* @PyLong_FromLongLong(i64) local_unnamed_addr

; Function Attrs: noinline norecurse nounwind
define linkonce_odr void @NRT_incref(i8* %.1) local_unnamed_addr #1 {
.3:
  %.4 = icmp eq i8* %.1, null
  br i1 %.4, label %.3.if, label %.3.endif, !prof !4

.3.if:                                            ; preds = %.3
  ret void

.3.endif:                                         ; preds = %.3
  %.7 = bitcast i8* %.1 to i64*
  %.4.i = atomicrmw add i64* %.7, i64 1 monotonic
  ret void
}

; Function Attrs: noinline
define linkonce_odr void @NRT_decref(i8* %.1) local_unnamed_addr #2 {
.3:
  %.4 = icmp eq i8* %.1, null
  br i1 %.4, label %.3.if, label %.3.endif, !prof !4

.3.if:                                            ; preds = %.3.endif, %.3
  ret void

.3.endif:                                         ; preds = %.3
  %.7 = bitcast i8* %.1 to i64*
  %.4.i = atomicrmw sub i64* %.7, i64 1 monotonic
  %.9 = icmp eq i64 %.4.i, 1
  br i1 %.9, label %.3.endif.if, label %.3.if, !prof !4

.3.endif.if:                                      ; preds = %.3.endif
  tail call void @NRT_MemInfo_call_dtor(i8* nonnull %.1)
  ret void
}

declare void @NRT_MemInfo_call_dtor(i8*) local_unnamed_addr

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @printf(i8*, ...) local_unnamed_addr #3 comdat {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %5 = bitcast i8** %4 to i8*
  call void @llvm.va_start(i8* %5)
  %6 = load i8*, i8** %4, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = call { i8* }* @__acrt_iob_func(i32 1)
  %9 = call i32 @_vfprintf_l({ i8* }* %8, i8* %7, %struct.__crt_locale_pointers.1.6* null, i8* %6)
  store i32 %9, i32* %3, align 4
  %10 = bitcast i8** %4 to i8*
  call void @llvm.va_end(i8* %10)
  %11 = load i32, i32* %3, align 4
  ret i32 %11
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #0

declare { i8* }* @__acrt_iob_func(i32) local_unnamed_addr #6

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_vfprintf_l({ i8* }*, i8*, %struct.__crt_locale_pointers.1.6*, i8*) local_unnamed_addr #3 comdat {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.__crt_locale_pointers.1.6*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca { i8* }*, align 8
  store i8* %3, i8** %5, align 8
  store %struct.__crt_locale_pointers.1.6* %2, %struct.__crt_locale_pointers.1.6** %6, align 8
  store i8* %1, i8** %7, align 8
  store { i8* }* %0, { i8* }** %8, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load %struct.__crt_locale_pointers.1.6*, %struct.__crt_locale_pointers.1.6** %6, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = load { i8* }*, { i8* }** %8, align 8
  %13 = call i64* @__local_stdio_printf_options()
  %14 = load i64, i64* %13, align 8
  %15 = call i32 @__stdio_common_vfprintf(i64 %14, { i8* }* %12, i8* %11, %struct.__crt_locale_pointers.1.6* %10, i8* %9)
  ret i32 %15
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #0

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i64* @__local_stdio_printf_options() local_unnamed_addr #7 comdat {
  ret i64* @"\01?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA"
}

declare i32 @__stdio_common_vfprintf(i64, { i8* }*, i8*, %struct.__crt_locale_pointers.1.6*, i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare i64 @fread(i8* nocapture, i64, i64, { i8* }* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare noalias { i8* }* @fopen(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #4

declare i32 @_fseeki64({ i8* }*, i64, i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @llvm.stackprotector(i8*, i8**) #0

attributes #0 = { nounwind }
attributes #1 = { noinline norecurse nounwind }
attributes #2 = { noinline }
attributes #3 = { noinline optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.linker.options = !{!0, !0}
!llvm.ident = !{!1, !1}
!llvm.module.flags = !{!2, !3}

!0 = !{!"/FAILIFMISMATCH:\22_CRT_STDIO_ISO_WIDE_SPECIFIERS=0\22"}
!1 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
!2 = !{i32 1, !"wchar_size", i32 2}
!3 = !{i32 7, !"PIC Level", i32 2}
!4 = !{!"branch_weights", i32 1, i32 99}
!5 = !{!"branch_weights", i32 99, i32 1}
