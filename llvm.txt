(array(int8, 1d, C), array(int64, 1d, C), bytearray(uint8, 1d, C), int64, int64, int64, int64, int64, int64)//////////////; ModuleID = '<string>'
source_filename = "<string>"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%struct.circular_buf_t.4 = type { i64*, i64, i64, i64 }
%struct.TgHd.5 = type { [32 x i8], i32, i32, i64 }
%struct.__crt_locale_pointers.1.6 = type { %struct.__crt_locale_data.2.7*, %struct.__crt_multibyte_data.3.8* }
%struct.__crt_locale_data.2.7 = type opaque
%struct.__crt_multibyte_data.3.8 = type opaque

$printf = comdat any

$_vfprintf_l = comdat any

$__local_stdio_printf_options = comdat any

$"\01??_C@_0BB@NIGCBLED@?6TOTAL?5SLOTS?3?5?$CFd?$AA@" = comdat any

$"\01??_C@_0BG@NJEFHGP@?6Init?5ring?5buffer?5?$CFd?4?$AA@" = comdat any

$"\01??_C@_0BM@KDJELMIO@?6Buffer?5created?0?5empty?3?5?$CFd?6?$AA@" = comdat any

$"\01??_C@_0CF@BDINJJIB@?6?5?$FLERROR?$FNMemalloc?5failed?0?5aborti@" = comdat any

$"\01?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA" = comdat any

$"\01??_C@_0BM@PJHDCAIH@?6?5?$FLERROR?$FNCorrupted?5slot?$CB?$CB?$CB?$CB?$AA@" = comdat any

$"\01??_C@_0CE@MNMCEKMH@?6POOL?5is?5empty?0?5read?5form?5file?50@" = comdat any

$"\01??_C@_0CM@LHOLBNIE@?6?6Thread?5assigned?5to?5file?5part?5?$FL@" = comdat any

$"\01??_C@_02JDPG@rb?$AA@" = comdat any

$"\01??_C@_0EP@PGBLNION@?6?5?$FLERROR?$FNReading?5buffer?5for?5Time@" = comdat any

$"\01??_C@_0DE@PLFGPKJO@?6?5?$FLERROR?$FNTime?9tag?5file?5cannot?5be@" = comdat any

@.const.mainloop = internal constant [9 x i8] c"mainloop\00"
@".const.Fatal error: missing _dynfunc.Closure" = internal constant [38 x i8] c"Fatal error: missing _dynfunc.Closure\00"
@PyExc_RuntimeError = external global i8
@".const.missing Environment" = internal constant [20 x i8] c"missing Environment\00"
@"\01?READER_fpin@@3PEAU_iobuf@@EA" = local_unnamed_addr global { i8* }* null, align 8
@order_gurantee2 = local_unnamed_addr global i64 0, align 8
@READER_batchend_pos_in_file = local_unnamed_addr global i64 0, align 8
@READER_batch_actualread_length = local_unnamed_addr global i64 0, align 8
@READER_buffer = local_unnamed_addr global i8* null, align 8
@READER_fseekpoint = local_unnamed_addr global i64 0, align 8
@READER_fendpoint = local_unnamed_addr global i64 0, align 8
@READER_next_RecID_relativeinbatch = local_unnamed_addr global i64 0, align 8
@READER_BytesofRecords = local_unnamed_addr global i32 0, align 4
@READER_TTRes_pspr = local_unnamed_addr global i64 0, align 8
@READER_SYNCRate_pspr = local_unnamed_addr global i64 0, align 8
@READER_DTRes_pspr = local_unnamed_addr global i64 0, align 8
@POOL_slot0_last_chns = local_unnamed_addr global i8 0, align 1
@POOL_real_slots = local_unnamed_addr global i8 0, align 1
@POOL_real_chns = local_unnamed_addr global i8 0, align 1
@POOL_total_slots = local_unnamed_addr global i8 0, align 1
@POOL_timetag = local_unnamed_addr global i64* null, align 8
@POOL_slot = local_unnamed_addr global i8* null, align 8
@VSLOT_timetag = local_unnamed_addr global %struct.circular_buf_t.4* null, align 8
@"\01??_C@_0BB@NIGCBLED@?6TOTAL?5SLOTS?3?5?$CFd?$AA@" = linkonce_odr unnamed_addr constant [17 x i8] c"\0ATOTAL SLOTS: %d\00", comdat, align 1
@"\01??_C@_0BG@NJEFHGP@?6Init?5ring?5buffer?5?$CFd?4?$AA@" = linkonce_odr unnamed_addr constant [22 x i8] c"\0AInit ring buffer %d.\00", comdat, align 1
@"\01??_C@_0BM@KDJELMIO@?6Buffer?5created?0?5empty?3?5?$CFd?6?$AA@" = linkonce_odr unnamed_addr constant [28 x i8] c"\0ABuffer created, empty: %d\0A\00", comdat, align 1
@"\01??_C@_0CF@BDINJJIB@?6?5?$FLERROR?$FNMemalloc?5failed?0?5aborti@" = linkonce_odr unnamed_addr constant [37 x i8] c"\0A [ERROR]Memalloc failed, aborting.\0A\00", comdat, align 1
@"\01?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA" = linkonce_odr global i64 0, comdat, align 8
@"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA" = internal unnamed_addr global i64 0, align 8
@"\01??_C@_0BM@PJHDCAIH@?6?5?$FLERROR?$FNCorrupted?5slot?$CB?$CB?$CB?$CB?$AA@" = linkonce_odr unnamed_addr constant [28 x i8] c"\0A [ERROR]Corrupted slot!!!!\00", comdat, align 1
@"\01??_C@_0CE@MNMCEKMH@?6POOL?5is?5empty?0?5read?5form?5file?50@" = linkonce_odr unnamed_addr constant [36 x i8] c"\0APOOL is empty, read form file 0. \0A\00", comdat, align 1
@"\01??_C@_0CM@LHOLBNIE@?6?6Thread?5assigned?5to?5file?5part?5?$FL@" = linkonce_odr unnamed_addr constant [44 x i8] c"\0A\0AThread assigned to file part [%lld,%lld]\0A\00", comdat, align 1
@"\01??_C@_02JDPG@rb?$AA@" = linkonce_odr unnamed_addr constant [3 x i8] c"rb\00", comdat, align 1
@"\01??_C@_0EP@PGBLNION@?6?5?$FLERROR?$FNReading?5buffer?5for?5Time@" = linkonce_odr unnamed_addr constant [79 x i8] c"\0A [ERROR]Reading buffer for Time-tag file is not assgined properly, aborting.\0A\00", comdat, align 1
@"\01??_C@_0DE@PLFGPKJO@?6?5?$FLERROR?$FNTime?9tag?5file?5cannot?5be@" = linkonce_odr unnamed_addr constant [52 x i8] c"\0A [ERROR]Time-tag file cannot be opened, aborting.\0A\00", comdat, align 1
@"\01?order_gurantee@@3_JA" = local_unnamed_addr global i64 0, align 8
@SYNCRate_pspr = local_unnamed_addr global i64 0, align 8
@TTRes_pspr = local_unnamed_addr global i64 0, align 8
@DTRes_pspr = local_unnamed_addr global i64 0, align 8
@NumRecords = local_unnamed_addr global i64 -1, align 8
@RecordType = local_unnamed_addr global i64 0, align 8
@BytesofRecords = local_unnamed_addr global i64 0, align 8
@TTF_header_offset = local_unnamed_addr global i64 0, align 8
@TTF_filesize = local_unnamed_addr global i64 0, align 8
@IsT2 = local_unnamed_addr global i8 0, align 1
@"\01?TagHead@@3UTgHd@@A" = local_unnamed_addr global %struct.TgHd.5 zeroinitializer, align 8

define i32 @"_ZN8mainloop12mainloop$241E5ArrayIaLi1E1C7mutable7alignedE5ArrayIxLi1E1C7mutable7alignedE35bytearray$28uint8$2c$201d$2c$20C$29xxxxxx"(i64* noalias nocapture %retptr, { i8*, i32 }** noalias nocapture readnone %excinfo, i8* noalias nocapture readnone %env, i8* %arg.chn.0, i8* nocapture readnone %arg.chn.1, i64 %arg.chn.2, i64 %arg.chn.3, i8* nocapture %arg.chn.4, i64 %arg.chn.5.0, i64 %arg.chn.6.0, i8* %arg.histogram.0, i8* nocapture readnone %arg.histogram.1, i64 %arg.histogram.2, i64 %arg.histogram.3, i64* nocapture %arg.histogram.4, i64 %arg.histogram.5.0, i64 %arg.histogram.6.0, i8* nocapture readnone %arg.filename1.0, i8* nocapture readnone %arg.filename1.1, i64 %arg.filename1.2, i64 %arg.filename1.3, i8* nocapture readonly %arg.filename1.4, i64 %arg.filename1.5.0, i64 %arg.filename1.6.0, i64 %arg.fseekpoint, i64 %arg.fendpoint, i64 %arg.BytesofRecords, i64 %arg.TTRes_pspr, i64 %arg.SYNCRate_pspr, i64 %arg.DTRes_pspr) local_unnamed_addr {
entry:
  tail call void @NRT_incref(i8* %arg.chn.0)
  tail call void @NRT_incref(i8* %arg.histogram.0)
  %0 = trunc i64 %arg.BytesofRecords to i32
  store i32 %0, i32* @READER_BytesofRecords, align 4
  store i64 %arg.fseekpoint, i64* @READER_fseekpoint, align 8
  store i64 %arg.fendpoint, i64* @READER_fendpoint, align 8
  store i64 %arg.TTRes_pspr, i64* @READER_TTRes_pspr, align 8
  store i64 %arg.DTRes_pspr, i64* @READER_DTRes_pspr, align 8
  store i64 %arg.SYNCRate_pspr, i64* @READER_SYNCRate_pspr, align 8
  %1 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @"\01??_C@_0CM@LHOLBNIE@?6?6Thread?5assigned?5to?5file?5part?5?$FL@", i64 0, i64 0), i64 %arg.fseekpoint, i64 %arg.fendpoint)
  %2 = sext i32 %1 to i64
  store i64 %2, i64* @order_gurantee2, align 8
  %3 = tail call { i8* }* @fopen(i8* %arg.filename1.4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"\01??_C@_02JDPG@rb?$AA@", i64 0, i64 0))
  store { i8* }* %3, { i8* }** @"\01?READER_fpin@@3PEAU_iobuf@@EA", align 8
  %4 = icmp eq { i8* }* %3, null
  br i1 %4, label %.sink.split.i, label %5

; <label>:5:                                      ; preds = %entry
  %6 = load i64, i64* @READER_fseekpoint, align 8
  %7 = tail call i32 @_fseeki64({ i8* }* nonnull %3, i64 %6, i32 0)
  %8 = load i32, i32* @READER_BytesofRecords, align 4
  %9 = sext i32 %8 to i64
  %10 = mul nsw i64 %9, 1000
  %11 = tail call noalias i8* @malloc(i64 %10)
  store i8* %11, i8** @READER_buffer, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %.sink.split.i, label %FileReader_init.exit

.sink.split.i:                                    ; preds = %5, %entry
  %.sink.i = phi i8* [ getelementptr inbounds ([79 x i8], [79 x i8]* @"\01??_C@_0EP@PGBLNION@?6?5?$FLERROR?$FNReading?5buffer?5for?5Time@", i64 0, i64 0), %5 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @"\01??_C@_0DE@PLFGPKJO@?6?5?$FLERROR?$FNTime?9tag?5file?5cannot?5be@", i64 0, i64 0), %entry ]
  %13 = tail call i32 (i8*, ...) @printf(i8* nonnull %.sink.i)
  %14 = sext i32 %13 to i64
  store i64 %14, i64* @order_gurantee2, align 8
  br label %FileReader_init.exit

FileReader_init.exit:                             ; preds = %.sink.split.i, %5
  %.0.i = phi i64 [ 0, %5 ], [ -1, %.sink.split.i ]
  %const = bitcast i64 9223372036854775807 to i64
  store i8 3, i8* @POOL_total_slots, align 1
  %15 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"\01??_C@_0BB@NIGCBLED@?6TOTAL?5SLOTS?3?5?$CFd?$AA@", i64 0, i64 0), i32 3)
  %16 = sext i32 %15 to i64
  store i64 %16, i64* @order_gurantee2, align 8
  store i8 1, i8* @POOL_real_slots, align 1
  store i8 2, i8* @POOL_real_chns, align 1
  %17 = load i8, i8* @POOL_total_slots, align 1
  %18 = zext i8 %17 to i64
  %19 = shl nuw nsw i64 %18, 4
  %20 = tail call noalias i8* @malloc(i64 %19)
  store i8* %20, i8** bitcast (i64** @POOL_timetag to i8**), align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %.sink.split.i1, label %22

; <label>:22:                                     ; preds = %FileReader_init.exit
  %23 = shl nuw nsw i64 %18, 1
  %24 = tail call noalias i8* @malloc(i64 %23)
  store i8* %24, i8** @POOL_slot, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %.sink.split.i1, label %26

; <label>:26:                                     ; preds = %22
  %27 = trunc i64 %18 to i8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %._crit_edge.i, label %._crit_edge11.preheader.i

._crit_edge11.preheader.i:                        ; preds = %26
  %29 = bitcast i8* %20 to i64*
  %30 = trunc i64 %18 to i8
  store i64 %const, i64* %29, align 8
  store i8 0, i8* %24, align 1
  %scevgep33.i8 = getelementptr i8, i8* %20, i64 8
  %31 = bitcast i8* %scevgep33.i8 to i64*
  store i64 %const, i64* %31, align 8
  %scevgep32.i9 = getelementptr i8, i8* %24, i64 1
  store i8 0, i8* %scevgep32.i9, align 1
  %32 = icmp eq i8 %30, 1
  br i1 %32, label %.lr.ph4.i, label %._crit_edge11.._crit_edge11_crit_edge.i.lr.ph

._crit_edge11.._crit_edge11_crit_edge.i.lr.ph:    ; preds = %._crit_edge11.preheader.i
  %scevgep33.i22 = getelementptr i8, i8* %20, i64 16
  %33 = bitcast i8* %scevgep33.i22 to i64*
  store i64 %const, i64* %33, align 8
  %34 = load i8*, i8** @POOL_slot, align 8
  %scevgep32.i23 = getelementptr i8, i8* %34, i64 2
  store i8 0, i8* %scevgep32.i23, align 1
  %35 = load i8, i8* @POOL_total_slots, align 1
  %36 = icmp ugt i8 %35, 1
  br i1 %36, label %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge.preheader, label %._crit_edge8.i

._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge.preheader: ; preds = %._crit_edge11.._crit_edge11_crit_edge.i.lr.ph
  br label %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge

._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge: ; preds = %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge, %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge.preheader
  %indvars.iv.next10.i24 = phi i64 [ %indvars.iv.next10.i, %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge ], [ 3, %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge.preheader ]
  %.pre.pre.i.pre = load i64*, i64** @POOL_timetag, align 8
  %scevgep2 = getelementptr i64, i64* %.pre.pre.i.pre, i64 %indvars.iv.next10.i24
  store i64 %const, i64* %scevgep2, align 8
  %37 = load i8*, i8** @POOL_slot, align 8
  %scevgep = getelementptr i8, i8* %37, i64 %indvars.iv.next10.i24
  store i8 0, i8* %scevgep, align 1
  %indvars.iv.next10.i = add nuw nsw i64 %indvars.iv.next10.i24, 1
  %38 = load i8, i8* @POOL_total_slots, align 1
  %39 = zext i8 %38 to i64
  %40 = shl nuw nsw i64 %39, 1
  %41 = icmp ult i64 %indvars.iv.next10.i, %40
  br i1 %41, label %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge, label %._crit_edge8.i

._crit_edge8.i:                                   ; preds = %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge, %._crit_edge11.._crit_edge11_crit_edge.i.lr.ph
  %.lcssa = phi i8 [ %35, %._crit_edge11.._crit_edge11_crit_edge.i.lr.ph ], [ %38, %._crit_edge11.._crit_edge11_crit_edge.i.._crit_edge11.._crit_edge11_crit_edge.i_crit_edge ]
  %42 = icmp eq i8 %.lcssa, 0
  br i1 %42, label %._crit_edge.i, label %.lr.ph4.i

.lr.ph4.i:                                        ; preds = %._crit_edge8.i, %._crit_edge11.preheader.i
  %.lcssa19 = phi i8 [ %.lcssa, %._crit_edge8.i ], [ 1, %._crit_edge11.preheader.i ]
  %43 = zext i8 %.lcssa19 to i32
  br label %44

; <label>:44:                                     ; preds = %44, %.lr.ph4.i
  %45 = phi i32 [ %43, %.lr.ph4.i ], [ %52, %44 ]
  %.0313.i = phi i32 [ 0, %.lr.ph4.i ], [ %50, %44 ]
  %46 = load i8*, i8** @POOL_slot, align 8
  %47 = add i32 %45, %.0313.i
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %46, i64 %48
  %tmp = trunc i32 %.0313.i to i8
  store i8 %tmp, i8* %49, align 1
  %50 = add nuw nsw i32 %.0313.i, 1
  %51 = load i8, i8* @POOL_total_slots, align 1
  %52 = zext i8 %51 to i32
  %53 = icmp ult i32 %50, %52
  br i1 %53, label %44, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %44, %._crit_edge8.i, %26
  %54 = tail call noalias i8* @malloc(i64 64)
  store i8* %54, i8** bitcast (%struct.circular_buf_t.4** @VSLOT_timetag to i8**), align 8
  %55 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"\01??_C@_0BG@NJEFHGP@?6Init?5ring?5buffer?5?$CFd?4?$AA@", i64 0, i64 0), i32 0)
  %56 = sext i32 %55 to i64
  store i64 %56, i64* @order_gurantee2, align 8
  %57 = load i8*, i8** bitcast (%struct.circular_buf_t.4** @VSLOT_timetag to i8**), align 8
  %scevgep28.i = getelementptr i8, i8* %57, i64 24
  %58 = bitcast i8* %scevgep28.i to i64*
  store i64 1000000, i64* %58, align 8
  %59 = icmp eq i8* %57, null
  br i1 %59, label %.lr.ph.i.113, label %60

; <label>:60:                                     ; preds = %._crit_edge.i
  %scevgep.i = getelementptr i8, i8* %57, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* %scevgep.i, i8 0, i64 16, i32 8, i1 false)
  br label %.lr.ph.i.113

.lr.ph.i.113:                                     ; preds = %60, %._crit_edge.i
  %61 = tail call noalias i8* @malloc(i64 8000000)
  %62 = bitcast i8* %57 to i8**
  store i8* %61, i8** %62, align 8
  %63 = load %struct.circular_buf_t.4*, %struct.circular_buf_t.4** @VSLOT_timetag, align 8
  %scevgep19.i = getelementptr %struct.circular_buf_t.4, %struct.circular_buf_t.4* %63, i64 0, i32 2
  %scevgep23.i16 = getelementptr i64, i64* %scevgep19.i, i64 -1
  %.sroa.1.0.copyload.i = load i64, i64* %scevgep23.i16, align 8
  %.sroa.2.0.copyload.i = load i64, i64* %scevgep19.i, align 8
  %64 = icmp eq i64 %.sroa.1.0.copyload.i, %.sroa.2.0.copyload.i
  %65 = zext i1 %64 to i32
  %66 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"\01??_C@_0BM@KDJELMIO@?6Buffer?5created?0?5empty?3?5?$CFd?6?$AA@", i64 0, i64 0), i32 %65)
  %67 = sext i32 %66 to i64
  store i64 %67, i64* @order_gurantee2, align 8
  %68 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"\01??_C@_0BG@NJEFHGP@?6Init?5ring?5buffer?5?$CFd?4?$AA@", i64 0, i64 0), i32 1)
  %69 = sext i32 %68 to i64
  store i64 %69, i64* @order_gurantee2, align 8
  %70 = load i8*, i8** bitcast (%struct.circular_buf_t.4** @VSLOT_timetag to i8**), align 8
  %uglygep26.i.1 = getelementptr i8, i8* %70, i64 32
  %scevgep28.i.1 = getelementptr i8, i8* %70, i64 56
  %71 = bitcast i8* %scevgep28.i.1 to i64*
  store i64 1000000, i64* %71, align 8
  %72 = icmp eq i8* %uglygep26.i.1, null
  br i1 %72, label %POOL_init.exit.loopexit14, label %364

.sink.split.i1:                                   ; preds = %22, %FileReader_init.exit
  %73 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @"\01??_C@_0CF@BDINJJIB@?6?5?$FLERROR?$FNMemalloc?5failed?0?5aborti@", i64 0, i64 0))
  br label %POOL_init.exit

POOL_init.exit:                                   ; preds = %POOL_init.exit.loopexit14, %.sink.split.i1
  %storemerge.in = phi i32 [ %370, %POOL_init.exit.loopexit14 ], [ %73, %.sink.split.i1 ]
  %.029.i = phi i64 [ 0, %POOL_init.exit.loopexit14 ], [ -1, %.sink.split.i1 ]
  %storemerge = sext i32 %storemerge.in to i64
  store i64 %storemerge, i64* @order_gurantee2, align 8
  br label %B80

B80:                                              ; preds = %B88, %B116.endif, %POOL_init.exit
  %start.0 = phi i64 [ 0, %POOL_init.exit ], [ %.581.start.0, %B116.endif ], [ %.581.start.0, %B88 ]
  %74 = load i64*, i64** @POOL_timetag, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 1
  %76 = load i64, i64* %75, align 8
  %77 = load i8*, i8** @POOL_slot, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = load i8, i8* @POOL_real_slots, align 1
  %promoted40.i = zext i8 %80 to i64
  %promoted39.i = zext i8 %79 to i64
  %81 = sub nsw i64 %promoted39.i, %promoted40.i
  %promoted.i = trunc i64 %81 to i32
  %82 = icmp slt i32 %promoted.i, 0
  %83 = load i8, i8* @POOL_slot0_last_chns, align 1
  %84 = load i8, i8* @POOL_real_chns, align 1
  %85 = zext i8 %84 to i32
  %86 = add nsw i32 %promoted.i, %85
  %87 = trunc i32 %86 to i8
  %.0230.i = select i1 %82, i8 %83, i8 %87
  store i8 %.0230.i, i8* %arg.chn.4, align 1
  %88 = icmp eq i64 %76, %const
  br i1 %88, label %274, label %89

; <label>:89:                                     ; preds = %B80
  %90 = icmp slt i32 %promoted.i, 0
  br i1 %90, label %91, label %174

; <label>:91:                                     ; preds = %89
  %92 = load i64, i64* @READER_next_RecID_relativeinbatch, align 8
  %93 = load i32, i32* @READER_BytesofRecords, align 4
  %94 = sext i32 %93 to i64
  %95 = mul nsw i64 %92, %94
  %96 = load i64, i64* @READER_batch_actualread_length, align 8
  %97 = icmp slt i64 %95, %96
  br i1 %97, label %106, label %98

; <label>:98:                                     ; preds = %91
  %99 = mul nsw i64 %94, 1000
  %100 = load { i8* }*, { i8* }** @"\01?READER_fpin@@3PEAU_iobuf@@EA", align 8
  %101 = load i8*, i8** @READER_buffer, align 8
  %102 = tail call i64 @fread(i8* %101, i64 1, i64 %99, { i8* }* %100)
  store i64 %102, i64* @READER_batch_actualread_length, align 8
  %103 = load i64, i64* @READER_batchend_pos_in_file, align 8
  %104 = add nsw i64 %103, %102
  store i64 %104, i64* @READER_batchend_pos_in_file, align 8
  store i64 0, i64* @READER_next_RecID_relativeinbatch, align 8
  %105 = icmp slt i64 %102, %99
  br i1 %105, label %141, label %106

; <label>:106:                                    ; preds = %98, %91
  %107 = phi i64 [ %92, %91 ], [ 0, %98 ]
  %.pre27.i = load i32*, i32** bitcast (i8** @READER_buffer to i32**), align 8
  br label %.backedge11.i

.backedge11.i:                                    ; preds = %.thread.i, %137, %106
  %108 = phi i64 [ %107, %106 ], [ %136, %.thread.i ], [ %138, %137 ]
  %109 = getelementptr inbounds i32, i32* %.pre27.i, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = icmp slt i32 %110, 0
  br i1 %111, label %112, label %125

; <label>:112:                                    ; preds = %.backedge11.i
  %113 = lshr i32 %110, 25
  %trunc7.i = trunc i32 %113 to i6
  %114 = zext i6 %trunc7.i to i8
  switch i8 %114, label %.thread.i [
    i8 63, label %115
    i8 0, label %118
  ]

; <label>:115:                                    ; preds = %112
  %116 = load i64, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  %117 = add i64 %116, 33552000
  store i64 %117, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  br label %.thread.i

; <label>:118:                                    ; preds = %112
  %119 = load i64, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  %120 = and i32 %110, 33554431
  %121 = zext i32 %120 to i64
  %122 = add nsw i64 %119, %121
  %123 = load i64, i64* @READER_TTRes_pspr, align 8
  %124 = mul nsw i64 %122, %123
  br label %137

; <label>:125:                                    ; preds = %.backedge11.i
  %126 = load i64, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  %127 = and i32 %110, 33554431
  %128 = zext i32 %127 to i64
  %129 = add nsw i64 %126, %128
  %130 = load i64, i64* @READER_TTRes_pspr, align 8
  %131 = mul nsw i64 %129, %130
  %132 = lshr i32 %110, 25
  %133 = and i32 %132, 63
  %134 = add nuw nsw i32 %133, 1
  %135 = trunc i32 %134 to i8
  br label %137

.thread.i:                                        ; preds = %115, %112
  %136 = add nsw i64 %108, 1
  store i64 %136, i64* @READER_next_RecID_relativeinbatch, align 8
  br label %.backedge11.i

; <label>:137:                                    ; preds = %125, %118
  %.0240.i = phi i64 [ %124, %118 ], [ %131, %125 ]
  %.0239.i = phi i8 [ 0, %118 ], [ %135, %125 ]
  %138 = add nsw i64 %108, 1
  store i64 %138, i64* @READER_next_RecID_relativeinbatch, align 8
  %139 = icmp eq i64 %.0240.i, %const
  br i1 %139, label %.backedge11.i, label %140

; <label>:140:                                    ; preds = %137
  store i8 %.0239.i, i8* @POOL_slot0_last_chns, align 1
  br label %141

; <label>:141:                                    ; preds = %140, %98
  %.0229.i = phi i64 [ %.0240.i, %140 ], [ %const, %98 ]
  %142 = load i8, i8* @POOL_total_slots, align 1
  %143 = add i8 %142, %79
  %144 = load i64*, i64** @POOL_timetag, align 8
  %145 = zext i8 %143 to i64
  %146 = getelementptr inbounds i64, i64* %144, i64 %145
  store i64 %.0229.i, i64* %146, align 8
  %147 = load i8*, i8** @POOL_slot, align 8
  %148 = getelementptr inbounds i8, i8* %147, i64 %145
  store i8 %79, i8* %148, align 1
  %149 = icmp ugt i8 %143, 1
  br i1 %149, label %.lr.ph18.i.preheader, label %POOL_next.exit

.lr.ph18.i.preheader:                             ; preds = %141
  br label %.lr.ph18.i

.lr.ph18.i:                                       ; preds = %171, %.lr.ph18.i.preheader
  %.022716.i = phi i8 [ %div4.i, %171 ], [ %143, %.lr.ph18.i.preheader ]
  %div4.i = lshr i8 %.022716.i, 1
  %150 = and i8 %.022716.i, -2
  %151 = or i8 %.022716.i, 1
  %152 = load i64*, i64** @POOL_timetag, align 8
  %153 = zext i8 %150 to i64
  %154 = getelementptr inbounds i64, i64* %152, i64 %153
  %155 = load i64, i64* %154, align 8
  %156 = zext i8 %151 to i64
  %157 = getelementptr inbounds i64, i64* %152, i64 %156
  %158 = load i64, i64* %157, align 8
  %159 = icmp slt i64 %155, %158
  %160 = zext i8 %div4.i to i64
  br i1 %159, label %161, label %166

; <label>:161:                                    ; preds = %.lr.ph18.i
  %sunkaddr = mul i64 %160, 8
  %162 = bitcast i64* %152 to i8*
  %sunkaddr3 = getelementptr i8, i8* %162, i64 %sunkaddr
  %163 = bitcast i8* %sunkaddr3 to i64*
  store i64 %155, i64* %163, align 8
  %164 = load i8*, i8** @POOL_slot, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 %153
  br label %171

; <label>:166:                                    ; preds = %.lr.ph18.i
  %sunkaddr4 = mul i64 %160, 8
  %167 = bitcast i64* %152 to i8*
  %sunkaddr5 = getelementptr i8, i8* %167, i64 %sunkaddr4
  %168 = bitcast i8* %sunkaddr5 to i64*
  store i64 %158, i64* %168, align 8
  %169 = load i8*, i8** @POOL_slot, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 %156
  br label %171

; <label>:171:                                    ; preds = %166, %161
  %.sink9.i = phi i8* [ %169, %166 ], [ %164, %161 ]
  %.sink7.in.i = phi i8* [ %170, %166 ], [ %165, %161 ]
  %.sink7.i = load i8, i8* %.sink7.in.i, align 1
  %172 = getelementptr inbounds i8, i8* %.sink9.i, i64 %160
  store i8 %.sink7.i, i8* %172, align 1
  %173 = icmp ugt i8 %.022716.i, 3
  br i1 %173, label %.lr.ph18.i, label %POOL_next.exit

; <label>:174:                                    ; preds = %89
  %175 = load %struct.circular_buf_t.4*, %struct.circular_buf_t.4** @VSLOT_timetag, align 8
  %.sroa.140.0..sroa_idx41.i = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %175, i64 %81, i32 1
  %.sroa.140.0.copyload.i = load i64, i64* %.sroa.140.0..sroa_idx41.i, align 8
  %.sroa.242.0..sroa_idx43.i = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %175, i64 %81, i32 2
  %.sroa.242.0.copyload.i = load i64, i64* %.sroa.242.0..sroa_idx43.i, align 8
  %176 = icmp eq i64 %.sroa.140.0.copyload.i, %.sroa.242.0.copyload.i
  br i1 %176, label %177, label %180

; <label>:177:                                    ; preds = %174
  %178 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"\01??_C@_0BM@PJHDCAIH@?6?5?$FLERROR?$FNCorrupted?5slot?$CB?$CB?$CB?$CB?$AA@", i64 0, i64 0))
  %179 = sext i32 %178 to i64
  store i64 %179, i64* @order_gurantee2, align 8
  %.pre.i2 = load %struct.circular_buf_t.4*, %struct.circular_buf_t.4** @VSLOT_timetag, align 8
  br label %180

; <label>:180:                                    ; preds = %177, %174
  %181 = phi %struct.circular_buf_t.4* [ %.pre.i2, %177 ], [ %175, %174 ]
  %182 = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %181, i64 %81
  %183 = icmp eq %struct.circular_buf_t.4* %182, null
  br i1 %183, label %206, label %184

; <label>:184:                                    ; preds = %180
  %.sroa.1166.0..sroa_idx167.i = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %181, i64 %81, i32 1
  %.sroa.1166.0.copyload.i = load i64, i64* %.sroa.1166.0..sroa_idx167.i, align 8
  %.sroa.2168.0..sroa_idx169.i = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %181, i64 %81, i32 2
  %.sroa.2168.0.copyload.i = load i64, i64* %.sroa.2168.0..sroa_idx169.i, align 8
  %185 = icmp eq i64 %.sroa.1166.0.copyload.i, %.sroa.2168.0.copyload.i
  br i1 %185, label %206, label %186

; <label>:186:                                    ; preds = %184
  %187 = bitcast %struct.circular_buf_t.4* %182 to i64**
  %188 = load i64*, i64** %187, align 8
  %189 = getelementptr inbounds i64, i64* %188, i64 %.sroa.2168.0.copyload.i
  %190 = load i64, i64* %189, align 8
  %191 = add i64 %.sroa.2168.0.copyload.i, 1
  %192 = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %181, i64 %81, i32 3
  %193 = load i64, i64* %192, align 8
  %194 = or i64 %191, %193
  %195 = and i64 %194, -4294967296
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %202

; <label>:197:                                    ; preds = %186
  %198 = trunc i64 %193 to i32
  %199 = trunc i64 %191 to i32
  %200 = urem i32 %199, %198
  %201 = zext i32 %200 to i64
  br label %204

; <label>:202:                                    ; preds = %186
  %203 = urem i64 %191, %193
  br label %204

; <label>:204:                                    ; preds = %202, %197
  %205 = phi i64 [ %201, %197 ], [ %203, %202 ]
  store i64 %205, i64* %.sroa.2168.0..sroa_idx169.i, align 8
  br label %206

; <label>:206:                                    ; preds = %204, %184, %180
  %.01.i = phi i64 [ undef, %184 ], [ %190, %204 ], [ undef, %180 ]
  %207 = load i8, i8* @POOL_total_slots, align 1
  %208 = add i8 %207, %79
  %209 = load i64*, i64** @POOL_timetag, align 8
  %210 = zext i8 %208 to i64
  %211 = getelementptr inbounds i64, i64* %209, i64 %210
  store i64 %.01.i, i64* %211, align 8
  %212 = load i8*, i8** @POOL_slot, align 8
  %213 = getelementptr inbounds i8, i8* %212, i64 %210
  store i8 %79, i8* %213, align 1
  %214 = icmp ugt i8 %208, 1
  br i1 %214, label %.lr.ph24.i.preheader, label %._crit_edge25.i

.lr.ph24.i.preheader:                             ; preds = %206
  br label %.lr.ph24.i

.lr.ph24.i:                                       ; preds = %236, %.lr.ph24.i.preheader
  %.022.i = phi i8 [ %div3.i, %236 ], [ %208, %.lr.ph24.i.preheader ]
  %div3.i = lshr i8 %.022.i, 1
  %215 = and i8 %.022.i, -2
  %216 = or i8 %.022.i, 1
  %217 = load i64*, i64** @POOL_timetag, align 8
  %218 = zext i8 %215 to i64
  %219 = getelementptr inbounds i64, i64* %217, i64 %218
  %220 = load i64, i64* %219, align 8
  %221 = zext i8 %216 to i64
  %222 = getelementptr inbounds i64, i64* %217, i64 %221
  %223 = load i64, i64* %222, align 8
  %224 = icmp slt i64 %220, %223
  %225 = zext i8 %div3.i to i64
  br i1 %224, label %226, label %231

; <label>:226:                                    ; preds = %.lr.ph24.i
  %sunkaddr6 = mul i64 %225, 8
  %227 = bitcast i64* %217 to i8*
  %sunkaddr7 = getelementptr i8, i8* %227, i64 %sunkaddr6
  %228 = bitcast i8* %sunkaddr7 to i64*
  store i64 %220, i64* %228, align 8
  %229 = load i8*, i8** @POOL_slot, align 8
  %230 = getelementptr inbounds i8, i8* %229, i64 %218
  br label %236

; <label>:231:                                    ; preds = %.lr.ph24.i
  %sunkaddr8 = mul i64 %225, 8
  %232 = bitcast i64* %217 to i8*
  %sunkaddr9 = getelementptr i8, i8* %232, i64 %sunkaddr8
  %233 = bitcast i8* %sunkaddr9 to i64*
  store i64 %223, i64* %233, align 8
  %234 = load i8*, i8** @POOL_slot, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 %221
  br label %236

; <label>:236:                                    ; preds = %231, %226
  %.sink15.i = phi i8* [ %234, %231 ], [ %229, %226 ]
  %.sink13.in.i = phi i8* [ %235, %231 ], [ %230, %226 ]
  %.sink13.i = load i8, i8* %.sink13.in.i, align 1
  %237 = getelementptr inbounds i8, i8* %.sink15.i, i64 %225
  store i8 %.sink13.i, i8* %237, align 1
  %238 = icmp ugt i8 %.022.i, 3
  br i1 %238, label %.lr.ph24.i, label %._crit_edge25.i

._crit_edge25.i:                                  ; preds = %236, %206
  %239 = load %struct.circular_buf_t.4*, %struct.circular_buf_t.4** @VSLOT_timetag, align 8
  %.sroa.1.0..sroa_idx36.i = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %239, i64 %81, i32 1
  %.sroa.1.0.copyload.i3 = load i64, i64* %.sroa.1.0..sroa_idx36.i, align 8
  %.sroa.2.0..sroa_idx37.i = getelementptr inbounds %struct.circular_buf_t.4, %struct.circular_buf_t.4* %239, i64 %81, i32 2
  %.sroa.2.0.copyload.i4 = load i64, i64* %.sroa.2.0..sroa_idx37.i, align 8
  %240 = icmp eq i64 %.sroa.1.0.copyload.i3, %.sroa.2.0.copyload.i4
  br i1 %240, label %241, label %POOL_next.exit

; <label>:241:                                    ; preds = %._crit_edge25.i
  %242 = load i8, i8* @POOL_total_slots, align 1
  %243 = add i8 %242, %79
  %244 = load i64*, i64** @POOL_timetag, align 8
  %245 = zext i8 %243 to i64
  %246 = getelementptr inbounds i64, i64* %244, i64 %245
  store i64 %const, i64* %246, align 8
  %247 = load i8*, i8** @POOL_slot, align 8
  %248 = getelementptr inbounds i8, i8* %247, i64 %245
  store i8 %79, i8* %248, align 1
  %249 = icmp ugt i8 %243, 1
  br i1 %249, label %.lr.ph21.i.preheader, label %POOL_next.exit

.lr.ph21.i.preheader:                             ; preds = %241
  br label %.lr.ph21.i

.lr.ph21.i:                                       ; preds = %271, %.lr.ph21.i.preheader
  %.022219.i = phi i8 [ %div2.i, %271 ], [ %243, %.lr.ph21.i.preheader ]
  %div2.i = lshr i8 %.022219.i, 1
  %250 = and i8 %.022219.i, -2
  %251 = or i8 %.022219.i, 1
  %252 = load i64*, i64** @POOL_timetag, align 8
  %253 = zext i8 %250 to i64
  %254 = getelementptr inbounds i64, i64* %252, i64 %253
  %255 = load i64, i64* %254, align 8
  %256 = zext i8 %251 to i64
  %257 = getelementptr inbounds i64, i64* %252, i64 %256
  %258 = load i64, i64* %257, align 8
  %259 = icmp slt i64 %255, %258
  %260 = zext i8 %div2.i to i64
  br i1 %259, label %261, label %266

; <label>:261:                                    ; preds = %.lr.ph21.i
  %sunkaddr10 = mul i64 %260, 8
  %262 = bitcast i64* %252 to i8*
  %sunkaddr11 = getelementptr i8, i8* %262, i64 %sunkaddr10
  %263 = bitcast i8* %sunkaddr11 to i64*
  store i64 %255, i64* %263, align 8
  %264 = load i8*, i8** @POOL_slot, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 %253
  br label %271

; <label>:266:                                    ; preds = %.lr.ph21.i
  %sunkaddr12 = mul i64 %260, 8
  %267 = bitcast i64* %252 to i8*
  %sunkaddr13 = getelementptr i8, i8* %267, i64 %sunkaddr12
  %268 = bitcast i8* %sunkaddr13 to i64*
  store i64 %258, i64* %268, align 8
  %269 = load i8*, i8** @POOL_slot, align 8
  %270 = getelementptr inbounds i8, i8* %269, i64 %256
  br label %271

; <label>:271:                                    ; preds = %266, %261
  %.sink20.i = phi i8* [ %269, %266 ], [ %264, %261 ]
  %.sink18.in.i = phi i8* [ %270, %266 ], [ %265, %261 ]
  %.sink18.i = load i8, i8* %.sink18.in.i, align 1
  %272 = getelementptr inbounds i8, i8* %.sink20.i, i64 %260
  store i8 %.sink18.i, i8* %272, align 1
  %273 = icmp ugt i8 %.022219.i, 3
  br i1 %273, label %.lr.ph21.i, label %POOL_next.exit

; <label>:274:                                    ; preds = %B80
  %275 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"\01??_C@_0CE@MNMCEKMH@?6POOL?5is?5empty?0?5read?5form?5file?50@", i64 0, i64 0))
  %276 = sext i32 %275 to i64
  store i64 %276, i64* @order_gurantee2, align 8
  %277 = load i64, i64* @READER_next_RecID_relativeinbatch, align 8
  %278 = load i32, i32* @READER_BytesofRecords, align 4
  %279 = sext i32 %278 to i64
  %280 = mul nsw i64 %277, %279
  %281 = load i64, i64* @READER_batch_actualread_length, align 8
  %282 = icmp slt i64 %280, %281
  br i1 %282, label %291, label %283

; <label>:283:                                    ; preds = %274
  %284 = mul nsw i64 %279, 1000
  %285 = load { i8* }*, { i8* }** @"\01?READER_fpin@@3PEAU_iobuf@@EA", align 8
  %286 = load i8*, i8** @READER_buffer, align 8
  %287 = tail call i64 @fread(i8* %286, i64 1, i64 %284, { i8* }* %285)
  store i64 %287, i64* @READER_batch_actualread_length, align 8
  %288 = load i64, i64* @READER_batchend_pos_in_file, align 8
  %289 = add nsw i64 %288, %287
  store i64 %289, i64* @READER_batchend_pos_in_file, align 8
  store i64 0, i64* @READER_next_RecID_relativeinbatch, align 8
  %290 = icmp slt i64 %287, %284
  br i1 %290, label %326, label %291

; <label>:291:                                    ; preds = %283, %274
  %292 = phi i64 [ %277, %274 ], [ 0, %283 ]
  %.pre28.i = load i32*, i32** bitcast (i8** @READER_buffer to i32**), align 8
  br label %.backedge.i

.backedge.i:                                      ; preds = %.thread12.i, %322, %291
  %293 = phi i64 [ %292, %291 ], [ %321, %.thread12.i ], [ %323, %322 ]
  %294 = getelementptr inbounds i32, i32* %.pre28.i, i64 %293
  %295 = load i32, i32* %294, align 4
  %296 = icmp slt i32 %295, 0
  br i1 %296, label %297, label %310

; <label>:297:                                    ; preds = %.backedge.i
  %298 = lshr i32 %295, 25
  %trunc10.i = trunc i32 %298 to i6
  %299 = zext i6 %trunc10.i to i8
  switch i8 %299, label %.thread12.i [
    i8 63, label %300
    i8 0, label %303
  ]

; <label>:300:                                    ; preds = %297
  %301 = load i64, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  %302 = add i64 %301, 33552000
  store i64 %302, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  br label %.thread12.i

; <label>:303:                                    ; preds = %297
  %304 = load i64, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  %305 = and i32 %295, 33554431
  %306 = zext i32 %305 to i64
  %307 = add nsw i64 %304, %306
  %308 = load i64, i64* @READER_TTRes_pspr, align 8
  %309 = mul nsw i64 %307, %308
  br label %322

; <label>:310:                                    ; preds = %.backedge.i
  %311 = load i64, i64* @"\01?overflowcorrection@?1??pop_signal_from_file@@9@4_JA", align 8
  %312 = and i32 %295, 33554431
  %313 = zext i32 %312 to i64
  %314 = add nsw i64 %311, %313
  %315 = load i64, i64* @READER_TTRes_pspr, align 8
  %316 = mul nsw i64 %314, %315
  %317 = lshr i32 %295, 25
  %318 = and i32 %317, 63
  %319 = add nuw nsw i32 %318, 1
  %320 = trunc i32 %319 to i8
  br label %322

.thread12.i:                                      ; preds = %300, %297
  %321 = add nsw i64 %293, 1
  store i64 %321, i64* @READER_next_RecID_relativeinbatch, align 8
  br label %.backedge.i

; <label>:322:                                    ; preds = %310, %303
  %.0238.i = phi i64 [ %309, %303 ], [ %316, %310 ]
  %.0237.i = phi i8 [ 0, %303 ], [ %320, %310 ]
  %323 = add nsw i64 %293, 1
  store i64 %323, i64* @READER_next_RecID_relativeinbatch, align 8
  %324 = icmp eq i64 %.0238.i, %const
  br i1 %324, label %.backedge.i, label %325

; <label>:325:                                    ; preds = %322
  store i8 %.0237.i, i8* @POOL_slot0_last_chns, align 1
  br label %326

; <label>:326:                                    ; preds = %325, %283
  %.0225.i = phi i64 [ %.0238.i, %325 ], [ %const, %283 ]
  %327 = load i8, i8* @POOL_total_slots, align 1
  %328 = load i64*, i64** @POOL_timetag, align 8
  %329 = zext i8 %327 to i64
  %330 = getelementptr inbounds i64, i64* %328, i64 %329
  store i64 %.0225.i, i64* %330, align 8
  %331 = load i8*, i8** @POOL_slot, align 8
  %332 = getelementptr inbounds i8, i8* %331, i64 %329
  store i8 0, i8* %332, align 1
  %333 = icmp ugt i8 %327, 1
  br i1 %333, label %.lr.ph.i5.preheader, label %._crit_edge.i6

.lr.ph.i5.preheader:                              ; preds = %326
  br label %.lr.ph.i5

.lr.ph.i5:                                        ; preds = %355, %.lr.ph.i5.preheader
  %.022615.i = phi i8 [ %div.i, %355 ], [ %327, %.lr.ph.i5.preheader ]
  %div.i = lshr i8 %.022615.i, 1
  %334 = and i8 %.022615.i, -2
  %335 = or i8 %.022615.i, 1
  %336 = load i64*, i64** @POOL_timetag, align 8
  %337 = zext i8 %334 to i64
  %338 = getelementptr inbounds i64, i64* %336, i64 %337
  %339 = load i64, i64* %338, align 8
  %340 = zext i8 %335 to i64
  %341 = getelementptr inbounds i64, i64* %336, i64 %340
  %342 = load i64, i64* %341, align 8
  %343 = icmp slt i64 %339, %342
  %344 = zext i8 %div.i to i64
  br i1 %343, label %345, label %350

; <label>:345:                                    ; preds = %.lr.ph.i5
  %sunkaddr14 = mul i64 %344, 8
  %346 = bitcast i64* %336 to i8*
  %sunkaddr15 = getelementptr i8, i8* %346, i64 %sunkaddr14
  %347 = bitcast i8* %sunkaddr15 to i64*
  store i64 %339, i64* %347, align 8
  %348 = load i8*, i8** @POOL_slot, align 8
  %349 = getelementptr inbounds i8, i8* %348, i64 %337
  br label %355

; <label>:350:                                    ; preds = %.lr.ph.i5
  %sunkaddr16 = mul i64 %344, 8
  %351 = bitcast i64* %336 to i8*
  %sunkaddr17 = getelementptr i8, i8* %351, i64 %sunkaddr16
  %352 = bitcast i8* %sunkaddr17 to i64*
  store i64 %342, i64* %352, align 8
  %353 = load i8*, i8** @POOL_slot, align 8
  %354 = getelementptr inbounds i8, i8* %353, i64 %340
  br label %355

; <label>:355:                                    ; preds = %350, %345
  %.sink33.i = phi i8* [ %353, %350 ], [ %348, %345 ]
  %.sink31.in.i = phi i8* [ %354, %350 ], [ %349, %345 ]
  %.sink31.i = load i8, i8* %.sink31.in.i, align 1
  %356 = getelementptr inbounds i8, i8* %.sink33.i, i64 %344
  store i8 %.sink31.i, i8* %356, align 1
  %357 = icmp ugt i8 %.022615.i, 3
  br i1 %357, label %.lr.ph.i5, label %._crit_edge.i6

._crit_edge.i6:                                   ; preds = %355, %326
  %358 = load i8, i8* @POOL_slot0_last_chns, align 1
  store i8 %358, i8* %arg.chn.4, align 1
  %359 = load i64*, i64** @POOL_timetag, align 8
  %360 = getelementptr inbounds i64, i64* %359, i64 1
  %361 = load i64, i64* %360, align 8
  br label %POOL_next.exit

POOL_next.exit:                                   ; preds = %271, %171, %._crit_edge.i6, %241, %._crit_edge25.i, %141
  %.0231.i = phi i64 [ %361, %._crit_edge.i6 ], [ %76, %._crit_edge25.i ], [ %76, %141 ], [ %76, %241 ], [ %76, %171 ], [ %76, %271 ]
  %.228 = icmp eq i64 %.0231.i, %const
  br i1 %.228, label %B212, label %B88

B88:                                              ; preds = %POOL_next.exit
  %.271 = load i8, i8* %arg.chn.4, align 1
  %.283 = icmp eq i8 %.271, 0
  %.581.start.0 = select i1 %.283, i64 %.0231.i, i64 %start.0
  %.347 = icmp eq i8 %.271, 1
  br i1 %.347, label %B116.endif, label %B80

B212:                                             ; preds = %POOL_next.exit
  %.198 = add nsw i64 %.029.i, %.0.i
  tail call void @NRT_decref(i8* %arg.histogram.0)
  tail call void @NRT_decref(i8* %arg.chn.0)
  store i64 %.198, i64* %retptr, align 8
  ret i32 0

B116.endif:                                       ; preds = %B88
  %.370 = add i64 %.0231.i, 16
  %.397 = sub i64 %.370, %.581.start.0
  %.405 = sitofp i64 %.397 to double
  %.411 = fmul double %.405, 6.250000e-02
  %.420 = fptosi double %.411 to i64
  %362 = icmp slt i64 %.420, 62501
  %n_i.1 = select i1 %362, i64 %.420, i64 62501
  %363 = icmp sgt i64 %.420, 0
  %.n_i.1 = select i1 %363, i64 %n_i.1, i64 0
  %.521 = getelementptr i64, i64* %arg.histogram.4, i64 %.n_i.1
  %.522 = load i64, i64* %.521, align 8
  %.531 = add nsw i64 %.522, 1
  store i64 %.531, i64* %.521, align 8
  br label %B80

; <label>:364:                                    ; preds = %.lr.ph.i.113
  %scevgep.i.1 = getelementptr i8, i8* %70, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* %scevgep.i.1, i8 0, i64 16, i32 8, i1 false)
  br label %POOL_init.exit.loopexit14

POOL_init.exit.loopexit14:                        ; preds = %364, %.lr.ph.i.113
  %365 = tail call noalias i8* @malloc(i64 8000000)
  %366 = bitcast i8* %uglygep26.i.1 to i8**
  store i8* %365, i8** %366, align 8
  %367 = load %struct.circular_buf_t.4*, %struct.circular_buf_t.4** @VSLOT_timetag, align 8
  %scevgep19.i.1 = getelementptr %struct.circular_buf_t.4, %struct.circular_buf_t.4* %367, i64 0, i32 2
  %uglygep21.i.117 = getelementptr i64, i64* %scevgep19.i.1, i64 4
  %scevgep23.i.118 = getelementptr i64, i64* %scevgep19.i.1, i64 3
  %.sroa.1.0.copyload.i.1 = load i64, i64* %scevgep23.i.118, align 8
  %.sroa.2.0.copyload.i.1 = load i64, i64* %uglygep21.i.117, align 8
  %368 = icmp eq i64 %.sroa.1.0.copyload.i.1, %.sroa.2.0.copyload.i.1
  %369 = zext i1 %368 to i32
  %370 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"\01??_C@_0BM@KDJELMIO@?6Buffer?5created?0?5empty?3?5?$CFd?6?$AA@", i64 0, i64 0), i32 %369)
  br label %POOL_init.exit
}

define i8* @"_ZN7cpython8mainloop12mainloop$241E5ArrayIaLi1E1C7mutable7alignedE5ArrayIxLi1E1C7mutable7alignedE35bytearray$28uint8$2c$201d$2c$20C$29xxxxxx"(i8* %py_closure, i8* %py_args, i8* nocapture readnone %py_kws) local_unnamed_addr {
entry:
  %.5 = alloca i8*, align 8
  %.6 = alloca i8*, align 8
  %.7 = alloca i8*, align 8
  %.8 = alloca i8*, align 8
  %.9 = alloca i8*, align 8
  %.10 = alloca i8*, align 8
  %.11 = alloca i8*, align 8
  %.12 = alloca i8*, align 8
  %.13 = alloca i8*, align 8
  %.14 = call i32 (i8*, i8*, i64, i64, ...) @PyArg_UnpackTuple(i8* %py_args, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.const.mainloop, i64 0, i64 0), i64 9, i64 9, i8** nonnull %.5, i8** nonnull %.6, i8** nonnull %.7, i8** nonnull %.8, i8** nonnull %.9, i8** nonnull %.10, i8** nonnull %.11, i8** nonnull %.12, i8** nonnull %.13)
  %.15 = icmp eq i32 %.14, 0
  %.38 = alloca { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }, align 8
  %.49 = alloca { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }, align 8
  %0 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull %0, i8 0, i64 56, i32 8, i1 false)
  %.60 = alloca [80 x i8], align 1
  %.64 = alloca { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }, align 8
  %1 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull %1, i8 0, i64 56, i32 8, i1 false)
  %.168 = alloca i64, align 8
  %2 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull %2, i8 0, i64 56, i32 8, i1 false)
  br i1 %.15, label %entry.if, label %entry.endif, !prof !4

entry.if:                                         ; preds = %arg0.err, %entry.endif.endif.endif, %entry
  ret i8* null

entry.endif:                                      ; preds = %entry
  %.19 = icmp eq i8* %py_closure, null
  br i1 %.19, label %entry.endif.if, label %entry.endif.endif, !prof !4

entry.endif.if:                                   ; preds = %entry.endif
  %.21 = call i32 @puts(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @".const.Fatal error: missing _dynfunc.Closure", i64 0, i64 0))
  unreachable

entry.endif.endif:                                ; preds = %entry.endif
  %.23 = ptrtoint i8* %py_closure to i64
  %.24 = add i64 %.23, 24
  %.26 = inttoptr i64 %.24 to { i8* }*
  %.274 = bitcast { i8* }* %.26 to i8**
  %.28 = load i8*, i8** %.274, align 8
  %.33 = icmp eq i8* %.28, null
  br i1 %.33, label %entry.endif.endif.if, label %entry.endif.endif.endif, !prof !4

entry.endif.endif.if:                             ; preds = %entry.endif.endif
  call void @PyErr_SetString(i8* nonnull @PyExc_RuntimeError, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @".const.missing Environment", i64 0, i64 0))
  ret i8* null

entry.endif.endif.endif:                          ; preds = %entry.endif.endif
  %3 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8**
  %.37 = load i8*, i8** %.5, align 8
  %.40 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %.41 = call i32 @NRT_adapt_ndarray_from_python(i8* %.37, i8* nonnull %.40)
  %.42 = icmp eq i32 %.41, 0
  %.43.fca.0.load = load i8*, i8** %3, align 8
  %4 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %sunkaddr = getelementptr i8, i8* %4, i64 8
  %5 = bitcast i8* %sunkaddr to i8**
  %.43.fca.1.load = load i8*, i8** %5, align 8
  %6 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %sunkaddr5 = getelementptr i8, i8* %6, i64 16
  %7 = bitcast i8* %sunkaddr5 to i64*
  %.43.fca.2.load = load i64, i64* %7, align 8
  %8 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %sunkaddr6 = getelementptr i8, i8* %8, i64 24
  %9 = bitcast i8* %sunkaddr6 to i64*
  %.43.fca.3.load = load i64, i64* %9, align 8
  %10 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %sunkaddr7 = getelementptr i8, i8* %10, i64 32
  %11 = bitcast i8* %sunkaddr7 to i8**
  %.43.fca.4.load = load i8*, i8** %11, align 8
  %12 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %sunkaddr8 = getelementptr i8, i8* %12, i64 40
  %13 = bitcast i8* %sunkaddr8 to i64*
  %.43.fca.5.0.load = load i64, i64* %13, align 8
  %14 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.38 to i8*
  %sunkaddr9 = getelementptr i8, i8* %14, i64 48
  %15 = bitcast i8* %sunkaddr9 to i64*
  %.43.fca.6.0.load = load i64, i64* %15, align 8
  br i1 %.42, label %entry.endif.endif.endif.endif, label %entry.if, !prof !5

entry.endif.endif.endif.endif:                    ; preds = %entry.endif.endif.endif
  %16 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8**
  %.48 = load i8*, i8** %.6, align 8
  %.51 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %.52 = call i32 @NRT_adapt_ndarray_from_python(i8* %.48, i8* nonnull %.51)
  %.53 = icmp eq i32 %.52, 0
  %.54.fca.0.load = load i8*, i8** %16, align 8
  %17 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %sunkaddr10 = getelementptr i8, i8* %17, i64 8
  %18 = bitcast i8* %sunkaddr10 to i8**
  %.54.fca.1.load = load i8*, i8** %18, align 8
  %19 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %sunkaddr11 = getelementptr i8, i8* %19, i64 16
  %20 = bitcast i8* %sunkaddr11 to i64*
  %.54.fca.2.load = load i64, i64* %20, align 8
  %21 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %sunkaddr12 = getelementptr i8, i8* %21, i64 24
  %22 = bitcast i8* %sunkaddr12 to i64*
  %.54.fca.3.load = load i64, i64* %22, align 8
  %23 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %sunkaddr13 = getelementptr i8, i8* %23, i64 32
  %24 = bitcast i8* %sunkaddr13 to i64**
  %.54.fca.4.load = load i64*, i64** %24, align 8
  %25 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %sunkaddr14 = getelementptr i8, i8* %25, i64 40
  %26 = bitcast i8* %sunkaddr14 to i64*
  %.54.fca.5.0.load = load i64, i64* %26, align 8
  %27 = bitcast { i8*, i8*, i64, i64, i64*, [1 x i64], [1 x i64] }* %.49 to i8*
  %sunkaddr15 = getelementptr i8, i8* %27, i64 48
  %28 = bitcast i8* %sunkaddr15 to i64*
  %.54.fca.6.0.load = load i64, i64* %28, align 8
  br i1 %.53, label %entry.endif.endif.endif.endif.endif, label %arg0.err, !prof !5

arg0.err:                                         ; preds = %arg1.err, %entry.endif.endif.endif.endif
  call void @NRT_decref(i8* %.43.fca.0.load)
  br label %entry.if

entry.endif.endif.endif.endif.endif:              ; preds = %entry.endif.endif.endif.endif
  %.59 = load i8*, i8** %.7, align 8
  %.fca.0.gep116 = bitcast [80 x i8]* %.60 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull %.fca.0.gep116, i8 0, i64 80, i32 1, i1 false)
  %.62 = call i32 @numba_get_buffer(i8* %.59, [80 x i8]* nonnull %.60)
  %.63 = icmp ne i32 %.62, 0
  br i1 %.63, label %entry.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.if, !prof !4

arg1.err:                                         ; preds = %arg2.err, %entry.endif.endif.endif.endif.endif.endif
  call void @NRT_decref(i8* %.54.fca.0.load)
  br label %arg0.err

entry.endif.endif.endif.endif.endif.if:           ; preds = %entry.endif.endif.endif.endif.endif
  %.68 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  call void @NRT_adapt_buffer_from_python([80 x i8]* nonnull %.60, i8* nonnull %.68)
  br label %entry.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif:        ; preds = %entry.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif
  %29 = icmp ne i32 %.62, 0
  %30 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8**
  %.71.fca.0.load = load i8*, i8** %30, align 8
  %31 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  %sunkaddr17 = getelementptr i8, i8* %31, i64 8
  %32 = bitcast i8* %sunkaddr17 to i8**
  %.71.fca.1.load = load i8*, i8** %32, align 8
  %33 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  %sunkaddr18 = getelementptr i8, i8* %33, i64 16
  %34 = bitcast i8* %sunkaddr18 to i64*
  %.71.fca.2.load = load i64, i64* %34, align 8
  %35 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  %sunkaddr19 = getelementptr i8, i8* %35, i64 24
  %36 = bitcast i8* %sunkaddr19 to i64*
  %.71.fca.3.load = load i64, i64* %36, align 8
  %37 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  %sunkaddr20 = getelementptr i8, i8* %37, i64 32
  %38 = bitcast i8* %sunkaddr20 to i8**
  %.71.fca.4.load = load i8*, i8** %38, align 8
  %39 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  %sunkaddr21 = getelementptr i8, i8* %39, i64 40
  %40 = bitcast i8* %sunkaddr21 to i64*
  %.71.fca.5.0.load = load i64, i64* %40, align 8
  %41 = bitcast { i8*, i8*, i64, i64, i8*, [1 x i64], [1 x i64] }* %.64 to i8*
  %sunkaddr22 = getelementptr i8, i8* %41, i64 48
  %42 = bitcast i8* %sunkaddr22 to i64*
  %.71.fca.6.0.load = load i64, i64* %42, align 8
  br i1 %29, label %arg1.err, label %entry.endif.endif.endif.endif.endif.endif.endif, !prof !4

entry.endif.endif.endif.endif.endif.endif.endif:  ; preds = %entry.endif.endif.endif.endif.endif.endif
  %.77 = load i8*, i8** %.8, align 8
  %.79 = call i8* @PyNumber_Long(i8* %.77)
  %.80 = icmp eq i8* %.79, null
  br i1 %.80, label %entry.endif.endif.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.endif.endif.if, !prof !4

arg2.err:                                         ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, %entry.endif.endif.endif.endif.endif.endif.endif.endif
  call void @numba_release_buffer([80 x i8]* nonnull %.60)
  call void @NRT_decref(i8* %.71.fca.0.load)
  br label %arg1.err

entry.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif
  %.82 = call i64 @PyLong_AsLongLong(i8* nonnull %.79)
  call void @Py_DecRef(i8* nonnull %.79)
  br label %entry.endif.endif.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif.endif.endif
  %.78.0 = phi i64 [ %.82, %entry.endif.endif.endif.endif.endif.endif.endif.if ], [ undef, %entry.endif.endif.endif.endif.endif.endif.endif ]
  %.87 = call i8* @PyErr_Occurred()
  %.88 = icmp eq i8* %.87, null
  br i1 %.88, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %arg2.err, !prof !5

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif
  %.92 = load i8*, i8** %.9, align 8
  %.94 = call i8* @PyNumber_Long(i8* %.92)
  %.95 = icmp eq i8* %.94, null
  br i1 %.95, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, !prof !4

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.97 = call i64 @PyLong_AsLongLong(i8* nonnull %.94)
  call void @Py_DecRef(i8* nonnull %.94)
  br label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.93.0 = phi i64 [ %.97, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ undef, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif ]
  %.102 = call i8* @PyErr_Occurred()
  %.103 = icmp eq i8* %.102, null
  br i1 %.103, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %arg2.err, !prof !5

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.107 = load i8*, i8** %.10, align 8
  %.109 = call i8* @PyNumber_Long(i8* %.107)
  %.110 = icmp eq i8* %.109, null
  br i1 %.110, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, !prof !4

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.112 = call i64 @PyLong_AsLongLong(i8* nonnull %.109)
  call void @Py_DecRef(i8* nonnull %.109)
  br label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.108.0 = phi i64 [ %.112, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ undef, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif ]
  %.117 = call i8* @PyErr_Occurred()
  %.118 = icmp eq i8* %.117, null
  br i1 %.118, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %arg2.err, !prof !5

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.122 = load i8*, i8** %.11, align 8
  %.124 = call i8* @PyNumber_Long(i8* %.122)
  %.125 = icmp eq i8* %.124, null
  br i1 %.125, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, !prof !4

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.127 = call i64 @PyLong_AsLongLong(i8* nonnull %.124)
  call void @Py_DecRef(i8* nonnull %.124)
  br label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.123.0 = phi i64 [ %.127, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ undef, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif ]
  %.132 = call i8* @PyErr_Occurred()
  %.133 = icmp eq i8* %.132, null
  br i1 %.133, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %arg2.err, !prof !5

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.137 = load i8*, i8** %.12, align 8
  %.139 = call i8* @PyNumber_Long(i8* %.137)
  %.140 = icmp eq i8* %.139, null
  br i1 %.140, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, !prof !4

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.142 = call i64 @PyLong_AsLongLong(i8* nonnull %.139)
  call void @Py_DecRef(i8* nonnull %.139)
  br label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.138.0 = phi i64 [ %.142, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ undef, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif ]
  %.147 = call i8* @PyErr_Occurred()
  %.148 = icmp eq i8* %.147, null
  br i1 %.148, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %arg2.err, !prof !5

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.152 = load i8*, i8** %.13, align 8
  %.154 = call i8* @PyNumber_Long(i8* %.152)
  %.155 = icmp eq i8* %.154, null
  br i1 %.155, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, !prof !4

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.157 = call i64 @PyLong_AsLongLong(i8* nonnull %.154)
  call void @Py_DecRef(i8* nonnull %.154)
  br label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.153.0 = phi i64 [ %.157, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ undef, %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif ]
  %.162 = call i8* @PyErr_Occurred()
  %.163 = icmp eq i8* %.162, null
  br i1 %.163, label %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif, label %arg2.err, !prof !5

entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %entry.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.167 = call i8* @PyEval_SaveThread()
  store i64 0, i64* %.168, align 8
  %.176 = call i32 @"_ZN8mainloop12mainloop$241E5ArrayIaLi1E1C7mutable7alignedE5ArrayIxLi1E1C7mutable7alignedE35bytearray$28uint8$2c$201d$2c$20C$29xxxxxx"(i64* nonnull %.168, { i8*, i32 }** undef, i8* undef, i8* %.43.fca.0.load, i8* %.43.fca.1.load, i64 %.43.fca.2.load, i64 %.43.fca.3.load, i8* %.43.fca.4.load, i64 %.43.fca.5.0.load, i64 %.43.fca.6.0.load, i8* %.54.fca.0.load, i8* %.54.fca.1.load, i64 %.54.fca.2.load, i64 %.54.fca.3.load, i64* %.54.fca.4.load, i64 %.54.fca.5.0.load, i64 %.54.fca.6.0.load, i8* %.71.fca.0.load, i8* %.71.fca.1.load, i64 %.71.fca.2.load, i64 %.71.fca.3.load, i8* %.71.fca.4.load, i64 %.71.fca.5.0.load, i64 %.71.fca.6.0.load, i64 %.78.0, i64 %.93.0, i64 %.108.0, i64 %.123.0, i64 %.138.0, i64 %.153.0)
  %.186 = load i64, i64* %.168, align 8
  call void @PyEval_RestoreThread(i8* %.167)
  call void @numba_release_buffer([80 x i8]* nonnull %.60)
  call void @NRT_decref(i8* %.43.fca.0.load)
  call void @NRT_decref(i8* %.54.fca.0.load)
  call void @NRT_decref(i8* %.71.fca.0.load)
  %.197 = call i8* @PyLong_FromLongLong(i64 %.186)
  ret i8* %.197
}

declare i32 @PyArg_UnpackTuple(i8*, i8*, i64, i64, ...) local_unnamed_addr

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #0

declare void @PyErr_SetString(i8*, i8*) local_unnamed_addr

declare i32 @NRT_adapt_ndarray_from_python(i8* nocapture, i8* nocapture) local_unnamed_addr

declare i32 @numba_get_buffer(i8*, [80 x i8]*) local_unnamed_addr

declare void @NRT_adapt_buffer_from_python([80 x i8]* nocapture, i8* nocapture) local_unnamed_addr

declare i8* @PyNumber_Long(i8*) local_unnamed_addr

declare void @numba_release_buffer([80 x i8]*) local_unnamed_addr

declare i64 @PyLong_AsLongLong(i8*) local_unnamed_addr

declare void @Py_DecRef(i8*) local_unnamed_addr

declare i8* @PyErr_Occurred() local_unnamed_addr

declare i8* @PyEval_SaveThread() local_unnamed_addr

declare void @PyEval_RestoreThread(i8*) local_unnamed_addr

declare i8* @PyLong_FromLongLong(i64) local_unnamed_addr

; Function Attrs: noinline norecurse nounwind
define linkonce_odr void @NRT_incref(i8* %.1) local_unnamed_addr #1 {
.3:
  %.4 = icmp eq i8* %.1, null
  br i1 %.4, label %.3.if, label %.3.endif, !prof !4

.3.if:                                            ; preds = %.3
  ret void

.3.endif:                                         ; preds = %.3
  %.7 = bitcast i8* %.1 to i64*
  %.4.i = atomicrmw add i64* %.7, i64 1 monotonic
  ret void
}

; Function Attrs: noinline
define linkonce_odr void @NRT_decref(i8* %.1) local_unnamed_addr #2 {
.3:
  %.4 = icmp eq i8* %.1, null
  br i1 %.4, label %.3.if, label %.3.endif, !prof !4

.3.if:                                            ; preds = %.3.endif, %.3
  ret void

.3.endif:                                         ; preds = %.3
  %.7 = bitcast i8* %.1 to i64*
  %.4.i = atomicrmw sub i64* %.7, i64 1 monotonic
  %.9 = icmp eq i64 %.4.i, 1
  br i1 %.9, label %.3.endif.if, label %.3.if, !prof !4

.3.endif.if:                                      ; preds = %.3.endif
  tail call void @NRT_MemInfo_call_dtor(i8* nonnull %.1)
  ret void
}

declare void @NRT_MemInfo_call_dtor(i8*) local_unnamed_addr

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @printf(i8*, ...) local_unnamed_addr #3 comdat {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %5 = bitcast i8** %4 to i8*
  call void @llvm.va_start(i8* %5)
  %6 = load i8*, i8** %4, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = call { i8* }* @__acrt_iob_func(i32 1)
  %9 = call i32 @_vfprintf_l({ i8* }* %8, i8* %7, %struct.__crt_locale_pointers.1.6* null, i8* %6)
  store i32 %9, i32* %3, align 4
  %10 = bitcast i8** %4 to i8*
  call void @llvm.va_end(i8* %10)
  %11 = load i32, i32* %3, align 4
  ret i32 %11
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #0

declare { i8* }* @__acrt_iob_func(i32) local_unnamed_addr #6

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_vfprintf_l({ i8* }*, i8*, %struct.__crt_locale_pointers.1.6*, i8*) local_unnamed_addr #3 comdat {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.__crt_locale_pointers.1.6*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca { i8* }*, align 8
  store i8* %3, i8** %5, align 8
  store %struct.__crt_locale_pointers.1.6* %2, %struct.__crt_locale_pointers.1.6** %6, align 8
  store i8* %1, i8** %7, align 8
  store { i8* }* %0, { i8* }** %8, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load %struct.__crt_locale_pointers.1.6*, %struct.__crt_locale_pointers.1.6** %6, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = load { i8* }*, { i8* }** %8, align 8
  %13 = call i64* @__local_stdio_printf_options()
  %14 = load i64, i64* %13, align 8
  %15 = call i32 @__stdio_common_vfprintf(i64 %14, { i8* }* %12, i8* %11, %struct.__crt_locale_pointers.1.6* %10, i8* %9)
  ret i32 %15
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #0

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i64* @__local_stdio_printf_options() local_unnamed_addr #7 comdat {
  ret i64* @"\01?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA"
}

declare i32 @__stdio_common_vfprintf(i64, { i8* }*, i8*, %struct.__crt_locale_pointers.1.6*, i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare i64 @fread(i8* nocapture, i64, i64, { i8* }* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare noalias { i8* }* @fopen(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #4

declare i32 @_fseeki64({ i8* }*, i64, i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @llvm.stackprotector(i8*, i8**) #0

attributes #0 = { nounwind }
attributes #1 = { noinline norecurse nounwind }
attributes #2 = { noinline }
attributes #3 = { noinline optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.linker.options = !{!0, !0}
!llvm.ident = !{!1, !1}
!llvm.module.flags = !{!2, !3}

!0 = !{!"/FAILIFMISMATCH:\22_CRT_STDIO_ISO_WIDE_SPECIFIERS=0\22"}
!1 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
!2 = !{i32 1, !"wchar_size", i32 2}
!3 = !{i32 7, !"PIC Level", i32 2}
!4 = !{!"branch_weights", i32 1, i32 99}
!5 = !{!"branch_weights", i32 99, i32 1}
