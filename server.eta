{"#expcfg": "{\"exp_name\":\"startstop\",\"exp_disc\":\"startstop\",\"exp_email\":\"zuzeng@kth.se\",\"exp_ver\":\"1\",\"ws\":\"ws://localhost:5678\"}", "eta_index_table": "[{\"id\":\"vi_templatejevjreof\",\"name\":\"NewInstrument\",\"class / # of channels\":\"compile\",\"input channels\":\"[]\",\"output channels\":\"[]\",\"arrays\":\"[]\"},{\"id\":\"ri_templatejevjrf8h\",\"name\":\"TimeTagger\",\"class / # of channels\":\"4\",\"input channels\":\"FILE\",\"output channels\":\"[]\\n                        \",\"arrays\":\"N/A\"}]", "vi_templatejevjreof": "{\"nodes\":[{\"x\":444,\"y\":152,\"fixed\":true,\"text\":\"start\",\"px\":444,\"py\":152},{\"x\":186,\"y\":163,\"fixed\":true,\"text\":\"stop\",\"initial\":true,\"px\":186,\"py\":163}],\"edges\":[{\"source\":0,\"target\":1,\"text\":\"1\"},{\"source\":1,\"target\":0,\"text\":\"0\"},{\"source\":1,\"target\":1,\"text\":\"1\"},{\"source\":0,\"target\":0,\"text\":\"0\"}],\"usercode\":\"TABLE(t1)\\nCLOCK(c1)\\nstart:\\n    startclock(c1)\\nstop:\\n    stopclock(c1)\\n    hist(c1,t1,0,16,62502)\"}", "ri_templatejevjrf8h": null, "vi_templatejevjrmen": null, "code": "def process():\r\n    def read_file(filename):\r\n        with open(filename) as f:\r\n            return f.read()\r\n    code, metadata = codegen.compile_eta(read_file(\"server.eta\"))\r\n    # below this line are user code\r\n    histogram = mp_core(\"HHT2.ptu\", code)\r\n    with open(\"etanxg.tensor\", \"w\") as writeto:\r\n        writeto.write(tensor.print_tensor(histogram.tolist()))\r\n\r\ndef display():\r\n    app = dash.Dash()\r\n    app.layout = html.Div(children=[\r\n        html.H1(children='Hello form ETAasdfasfd'),\r\n        html.Div(children='''\r\n            Dash: A web application framework for Python.\r\n        '''),\r\n        dcc.Graph(\r\n            id='example-graph',\r\n            figure={\r\n                'data': [\r\n                    {'x': [1, 2, 3], 'y': [4, 1, 2], 'type': 'bar', 'name': 'SF'},\r\n                    {'x': [1, 2, 3], 'y': [2, 4, 5], 'type': 'bar', 'name': u'Montr\u00c2\u00a8\u00c2\u00a6al'},\r\n                ],\r\n                'layout': {\r\n                    'title': 'Dash Data Visualization'\r\n                }\r\n            }\r\n        )\r\n    ])\r\n    from flask import request\r\n    server = app.server\r\n    @server.route('/shutdown', methods=['GET'])\r\n    def shutdown():\r\n        func = request.environ.get('werkzeug.server.shutdown')\r\n        if func is None:\r\n            raise RuntimeError('Not running with the Werkzeug Server')\r\n        func()\r\n        print(\"Server shutdown\")\r\n        return 'Server shutting down...'\r\n    app.server.run()"}